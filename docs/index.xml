<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Icarus Project – Documentation</title><link>/docs.html</link><description>Recent content in Documentation on Icarus Project</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Intro to Tor</title><link>/docs/alternative-publishing-methods/tor/intro.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/alternative-publishing-methods/tor/intro.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Beginner / Intermediate&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Gnu/Linux | macOS | MS Windows | Android | BSD&lt;/strong>&lt;/p>
&lt;hr>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;strong>This guide is an updated version of this &lt;a href="https://www.madamasr.com/en/2019/12/25/feature/politics/beating-the-block-mada-masr-launches-tor-mirror/">article&lt;/a>, published by MadaMasr - An Egyptian independent media organization - in the context of releasing their own Onion mirror.&lt;/strong>&lt;/p>
&lt;/div>
&lt;h2 id="what-is-tor">What is Tor?&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube-nocookie.com/embed/JWII85UlzKw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Tor&lt;/h4>
is the acronym for the original project that produced The Onion Router protocol, which protects the identity of internet users. It’s one of several technologies that have become widely used to roam the web freely and securely.
&lt;/div>
&lt;p>&lt;strong>The project began in the mid-1990s&lt;/strong> and has gone through several phases. It is now administered by a not-for-profit organization, supervised by a community of its users and developers.&lt;/p>
&lt;p>All Tor software is developed under &lt;strong>open-source licenses&lt;/strong> and is publicly available for anyone to view and collaborate in improving.&lt;/p>
&lt;h2 id="how-does-tor-work">How does Tor work?&lt;/h2>
&lt;p>&lt;strong>Let’s imagine the journey of a data packet between a user and a server&lt;/strong> (i.e. a website), both connected to the internet. With a regular connection, the data packet moves from the user’s device through the local router and then to the servers of the Internet Server Provider (ISP). If the ISP’s servers allow the packet to pass, it will reach its destination, hassle-free.&lt;/p>
&lt;p>&lt;strong>&lt;em>But what if you don’t want anyone to access your data packet, its destination or its content? Or to be able to block its journey?&lt;/em>&lt;/strong>&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Onion routing&lt;/h4>
&lt;p>allows your packet to take a different, more secure route to reach its final destination.&lt;/p>
&lt;p>Your Tor client will choose a group of random nodes for the packet to move through until it reaches its final destination. It will then generate a set of keys on your computer, which are used to encrypt the data packet as many times as the number of nodes it will pass through in its journey before reaching the final exit node.&lt;/p>
&lt;/div>
&lt;p>&lt;img src="../images/onion-services/5.png" alt="">&lt;/p>
&lt;p>&lt;strong>The encryption protocol&lt;/strong> allows each node the packet is passing through to decrypt just one layer of the encryption to get information about the next node the packet will pass through.&lt;/p>
&lt;p>The aim of the onion routing protocol is for your packet to pass through a series of random nodes before reaching its final destination, &lt;strong>with each node only receiving information about the nodes that directly proceed and follow it.&lt;/strong>&lt;/p>
&lt;p>None of the nodes — &lt;em>except for the last one&lt;/em> — can access information about the data packet’s final destination or see what’s inside it. &lt;strong>The final exit node decrypts the final layer and directs the packet to its intended destination on the internet.&lt;/strong>&lt;/p>
&lt;h2 id="who-runs-tor">Who runs Tor?&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">The organization&lt;/h4>
operates several machines that serve as nodes on its network. Volunteers run thousands more nodes — all under the community’s supervision — to ensure data security.
&lt;/div>
&lt;p>&lt;strong>Anyone can volunteer&lt;/strong> to host a node in the network given that they have the necessary technical capabilities and internet speed.&lt;/p>
&lt;p>Neither the community nor the organization &lt;strong>has the right or the ability to interfere with the encryption protocol because the encryption keys of each user are stored on their respective devices.&lt;/strong>&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;strong>Data packets are therefore completely encrypted within the Tor network.&lt;/strong>
&lt;/div>
&lt;h2 id="whats-the-difference-between-using-tor-and-using-a-virtual-private-network-vpn">What’s the difference between using Tor and using a Virtual Private Network (VPN)?&lt;/h2>
&lt;blockquote>
&lt;p>VPN is the name given to different protocols and mechanisms that route the connection of one or more machines to a virtual network through which they can access the internet.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>To do so,&lt;/strong> the VPN client creates an encrypted connection to the server of the virtual private network, which acts like a tunnel transferring data from the machine to the server before it reaches the internet. When the data gets to its final destination, it appears as if it were sent from the server of the virtual network.&lt;/p>
&lt;p>VPN theoretically helps protect users’ anonymity as it hides their geographical locations and identities from the servers at the receiving end. Yet while VPN provides some privacy besides enabling users to access blocked websites, it doesn’t provide watertight protection.&lt;/p>
&lt;p>Network admins can collect users’ data after decrypting them. Data can also be manipulated if users connect to websites and services that don’t use secure protocols, such as HTTPS.&lt;/p>
&lt;p>&lt;strong>It’s also not advisable to use free VPN services&lt;/strong>, as many such services make money by collecting and selling user data. Others inadvertently transfer adware and, sometimes, malware from unprotected websites while browsing.&lt;/p>
&lt;p>These are the main differences between using the Tor network and VPN services. Whether paid or free, VPN providers generally seek profit, and there isn’t a practical method to verify their user data security policies. Tor, on the other hand, is subject to clear transparency rules and the supervision of both developers and users.&lt;/p>
&lt;p>&lt;strong>Additionally,&lt;/strong> it’s easy to block access to VPN service providers, either through tracking their respective routing protocols or intercepting connections. Authorities can also directly block VPN servers and websites, as is the case with some countries.&lt;/p>
&lt;h2 id="whats-the-difference-between-onion-services-and-the-normal-web---clearnethttpsenwikipediaorgwikiclearnet_networking">What’s the difference between Onion Services and the normal web - &lt;a href="https://en.wikipedia.org/wiki/Clearnet_(networking)">Clearnet&lt;/a>?&lt;/h2>
&lt;p>&lt;strong>We’ve explained how Tor network operates by describing the journey of a data packet through the nodes&lt;/strong> until it reaches the exit node and then its destination on the internet.&lt;/p>
&lt;p>&lt;strong>But what if the packet never leaves Tor network?&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Onion services&lt;/strong> are used to grant access to servers operating completely within the Tor network that are only accessible using the onion routing protocol. These services can be accessed through randomly generated addresses (most of the time) ending with the special-use top-level domain suffix “.onion” (as opposed to the more common .com or .org).&lt;/p>
&lt;p>&lt;strong>What this technique provides&lt;/strong> is a routing protocol between the user and the server so that neither has any information about the other.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
Under optimum conditions in which all preferences are properly set by both parties, it is not possible to trace the server operating on Tor network, nor can the website’s admin collect any data that would reveal a user’s identity — barring, of course, a mistake or voluntary release of such information.
&lt;/div>
&lt;h2 id="tor-browser">Tor Browser&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
You can reach Tor Browser and download the installer for your respective operating system using the following links
&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.torproject.org/download/">Tor Project website&lt;/a> &lt;strong>If Internet censorship is in place in your country, there is a fairly chance this website is &lt;em>blocked&lt;/em>&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/TheTorProject/gettorbrowser/releases/tag/torbrowser-release">&lt;strong>Tor Project repository on GitHub&lt;/strong>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://archive.org/details/@gettor">&lt;strong>The Internet Archive&lt;/strong>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://drive.google.com/open?id=13CADQTsCwrGsIID09YQbNz2DfRMUoxUU">&lt;strong>Google Drive&lt;/strong>&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Other mirrors&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://tor.eff.org/">https://tor.eff.org/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://tor.calyxinstitute.org/">https://tor.calyxinstitute.org/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://tor.ccc.de/">https://tor.ccc.de/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We host an &lt;strong>expermintal mirror for Tor Browser binary files on IPFS,&lt;/strong> you can reach it on &lt;a href="https://ipfs.io/ipns/tor-ipfs.fightcensorship.tech">ipfs.io/ipns/tor-ipfs.fightcensorship.tech&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Tor Project&lt;/strong> also provides another method to download its browser. &lt;strong>Just send an email to &lt;a href="mailto:gettor@torproject.org">gettor@torproject.org&lt;/a>&lt;/strong> including the name of your operating system (Windows, OSX, Linux). You will receive a message containing links to download the browser via Google Drive and Dropbox, which aren’t blocked.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Tor Browser for Android is also available on the &lt;a href="https://play.google.com/store/apps/details?id=org.torproject.torbrowser">Google Play Store&lt;/a>&lt;/strong>&lt;/p>
&lt;div class="alert alert-primary" role="alert">
You can also use Tor network’s proxy app &lt;a href="https://play.google.com/store/apps/details?id=org.torproject.android">&lt;strong>Orbot&lt;/strong>&lt;/a>, which provides a similar service to VPNs. Orbot redirects the data from all the apps on your phone to go through Tor network. This can help override blocks placed on apps such as Signal and Wire, among others.
&lt;/div>
&lt;p>&lt;img src="../images/onion-services/3.gif" alt="Orbot VPN mode">&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;p>&lt;strong>There isn’t an official version&lt;/strong> of Tor Browser for iPhone and iPad users because of the restrictions Apple places on apps. However, every now and then, independent developers come up with alternative browsers to access Tor network such as &lt;a href="https://onionbrowser.com/">&lt;strong>OnionBrowser&lt;/strong>&lt;/a>.&lt;/p>
&lt;p>&lt;strong>These browsers, however, don’t ensure the anonymity of users accessing content outside the Tor network.&lt;/strong>&lt;/p>
&lt;/div>
&lt;h2 id="when-tor-is-blocked-activate-bridges">When Tor is blocked, activate bridges&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube-nocookie.com/embed/DkEqWGF3cvg?autoplay=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
Connection to Tor network usually gets restricted through blocking or jamming entry nodes because the addresses of most VPNs, as well as the protocols of nodes and relays, are openly available on the internet.
&lt;/div>
&lt;p>&lt;strong>What makes fully blocking Tor network such a difficult task is that there are many ways to connect to it. One such way is by using bridges.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>In a nutshell,&lt;/strong> bridges are servers run by volunteers whose addresses aren’t usually published openly. Bridges work as an intermediary between users and Tor network and help bypass blocks while hiding the connection from any party trying to analyze the network’s data.&lt;/p>
&lt;h3 id="activating-bridges">Activating Bridges&lt;/h3>
&lt;p>&lt;strong>Tor browser on Android phones&lt;/strong>&lt;/p>
&lt;p>&lt;img src="../images/onion-services/1.gif" alt="">&lt;/p>
&lt;p>&lt;strong>Tor’s Android client, Orbot&lt;/strong>&lt;/p>
&lt;p>&lt;img src="../images/onion-services/2.gif" alt="">&lt;/p>
&lt;p>&lt;strong>Tor browser on Desktop devices&lt;/strong>&lt;/p>
&lt;p>&lt;img src="../images/onion-services/4.gif" alt="">&lt;/p>
&lt;h3 id="websites-that-can-be-accessed-through-onion-services">Websites that can be accessed through .onion services&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.bbcnewsv2vjtpsuy.onion/">&lt;strong>BBC&lt;/strong>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.nytimes3xbfgragh.onion/">&lt;strong>The New York Times&lt;/strong>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://protonirockerxow.onion/">&lt;strong>ProtonMail&lt;/strong>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://facebookcorewwwi.onion/">&lt;strong>Facebook&lt;/strong>&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://madat5boo7oo5t2w.onion/">&lt;strong>MadaMasr&lt;/strong>&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: EOTK</title><link>/docs/alternative-publishing-methods/tor/eotk.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/alternative-publishing-methods/tor/eotk.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Advanced&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Gnu/Linux | macOS | BSD&lt;/strong>&lt;/p>
&lt;hr>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;blockquote>
&lt;p>As described by it&amp;rsquo;s own developer&lt;/p>
&lt;/blockquote>
&lt;div class="alert alert-primary" role="alert">
&lt;p>EOTK provides &lt;strong>a tool for deploying HTTP and HTTPS onion sites&lt;/strong> to provide official onion-networking presences for popular websites.&lt;/p>
&lt;p>The result is essentially a &amp;ldquo;man in the middle&amp;rdquo; proxy; you should set them up only for your own sites, or for sites which do not require login credentials of any kind.&lt;/p>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;strong>A thorough &lt;a href="https://github.com/alecmuffett/eotk/blob/master/docs.d/HOW-TO-INSTALL.md">implementation guide&lt;/a>&lt;/strong> is available on the project&amp;rsquo;s &lt;strong>&lt;a href="https://github.com/alecmuffett/eotk">repository on GitHub&lt;/a>&lt;/strong>, therefore, we will be providing translations in other &lt;strong>&lt;a href="../docs">available languages&lt;/a>&lt;/strong> for our guides.
&lt;/div></description></item><item><title>Docs: Decoy</title><link>/docs/dynamic-mirroring/decoy.html</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/dynamic-mirroring/decoy.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Intermediate / Advanced&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Gnu/Linux | macOS | MS Windows | Android | BSD&lt;/strong>&lt;/p>
&lt;hr>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Decoy is a reverse-proxy written in python and ready to deploy on Google App Engine platform. It can be configured to serve a specific website through App Engine.&lt;/p>
&lt;/div>
&lt;p>The main advantage Decoy provides is the ability to serve the configured website through &lt;a href="https://cloud.google.com/appengine">GAE platform - Google App Engine&lt;/a>, using a sub-domain under &lt;code>*.appspot.com&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Decoy will proxy all URLs which contains the configured domain in &lt;code>config.py&lt;/code> file automatically, any other URL will be opened normally without proxy.&lt;/strong>&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Clone the project&lt;/p>
&lt;p>&lt;code>git clone https://github.com/icaruslab/decoy.git&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create an account on &lt;a href="https://cloud.google.com/">Google Cloud Platform&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>After accessing &lt;a href="https://console.cloud.google.com/">Google Cloud Console&lt;/a> create a new project&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="../images/decoy/1.png" alt="">New Project&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The project name should be unique, if that&amp;rsquo;s the case the project ID will be the same, other wise it will be assigned a random name. The project ID will be used to access your mirror, final URL will be &lt;code>[ProjectID.appspot.com]&lt;/code>
&lt;/div>
&lt;ol start="4">
&lt;li>Install &lt;a href="https://cloud.google.com/sdk/install">Google Cloud SDK&lt;/a>&lt;/li>
&lt;li>Replace the &lt;code>url&lt;/code> variable in &lt;code>config.py&lt;/code> with your website domain name&lt;/li>
&lt;li>Use your terminal to go the project&amp;rsquo;s directory&lt;/li>
&lt;li>Run &lt;code>gcloud init&lt;/code> to configure GCloud SDK and login to your account.&lt;/li>
&lt;li>Select the project you created earlier using &lt;code>gcloud config set project [ProjectID]&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="../images/decoy/2.png" alt="">Set project ID&lt;/p>
&lt;ol start="9">
&lt;li>Run &lt;code>gcloud app deploy&lt;/code> and follow the instructions to deploy the app&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="../images/decoy/3.png" alt="">Deploy&lt;/p>
&lt;ol start="10">
&lt;li>Finally you can confirm your mirror is running by visiting &lt;code>[youprojectname].appspot.com&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="../images/decoy/4.png" alt="">&lt;/p>
&lt;h2 id="why-google-app-engine">Why Google App Engine?&lt;/h2>
&lt;p>&lt;strong>The main advantage&lt;/strong> of having the mirror traffic routed through GAE, is the ability to use a sub-domain under &lt;code>appspot.com&lt;/code> to access the mirror.&lt;/p>
&lt;p>As the same domain is associated with many other &lt;strong>Google cloud services&lt;/strong> it&amp;rsquo;d be difficult to block it entirely.&lt;/p>
&lt;p>However, &lt;strong>it&amp;rsquo;s possible to block the sub-domain&lt;/strong> without having to block the entire domain name, in which case you&amp;rsquo;ll be able to get a new mirror up and running in less than two minutes by simply creating a new project with a different name and ID and repeating steps &lt;strong>8:10&lt;/strong>&lt;/p>
&lt;h2 id="attribution">Attribution&lt;/h2>
&lt;p>This project was inspired and built on &lt;a href="https://github.com/bslatkin/mirrorrr">mirrorrr&lt;/a> project.&lt;/p>
&lt;h2 id="disclaimer">Disclaimer&lt;/h2>
&lt;p>This project and all Icarus Project’s related code and guides are developed for &lt;strong>the sole purpose of Internet censorship circumvention&lt;/strong>, more specifically in human rights and independent media context.&lt;/p>
&lt;p>&lt;strong>Icarus Project is not responsible for any abuse and/or malicious use of any of its published research results.&lt;/strong>&lt;/p>
&lt;h2 id="todo">Todo&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Rewrite in Python3&lt;/li>
&lt;/ul></description></item><item><title>Docs: Interplanetary File System</title><link>/docs/alternative-publishing-methods/ipfs/ipfs.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/alternative-publishing-methods/ipfs/ipfs.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Intermediate&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Gnu/Linux | macOS | MS Windows | Android | BSD&lt;/strong>&lt;/p>
&lt;hr>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Interplanetary File System - IPFS &lt;/h4>
&lt;p>&lt;strong>is A peer-to-peer hypermedia protocol&lt;/strong> which is being introduced as the future successor of HTTP.&lt;/p>
&lt;p>&lt;strong>Being built on the peer-to-peer data exchange system,&lt;/strong> IPFS is practically difficult to block at least by current censorship techniques and standards, making it worth testing.&lt;/p>
&lt;/div>
&lt;p>&lt;strong>While it&amp;rsquo;s basically built as a data storage and distribution protocol,&lt;/strong> makes the way it functions different than most current day web hosting and cloud functions today, where in most cases, websites are basically web applications which processes and renders on a server then send the resulted web pages to the user.&lt;/p>
&lt;p>&lt;strong>In IPFS case,&lt;/strong> there are no server nor processing capabilities, which mean that it&amp;rsquo;s only capable of serving static or semi-static web pages, essentially anything which depends on client-side rendering and processing.
in this scenario, the browser gets to do most of job and IPFS just delivers raw files.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
To learn about &lt;strong>the difference between static and dynamic websites&lt;/strong>, refer the &lt;a href="../docs/getting-started/#what-is-the-difference-between-static-and-dynamic-websites">&lt;strong>Getting Started&lt;/strong>&lt;/a> section in the documentations.
&lt;/div>
&lt;hr>
&lt;h2 id="installing-ipfs">Installing IPFS&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>MS Windows&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Install the CLI tool using &lt;strong>&lt;a href="https://chocolatey.org/packages/ipfs">Chocolatey&lt;/a>&lt;/strong> windows package manager &lt;code>choco install ipfs&lt;/code>&lt;/li>
&lt;li>Install the Desktop app (GUI) &lt;strong>&lt;a href="https://chocolatey.org/packages/ipfs-desktop">Chocolatey&lt;/a>&lt;/strong> &lt;code>choco install ipfs-desktop&lt;/code>&lt;/li>
&lt;li>Or download the installation file directly from &lt;a href="https://ipfs.io/#install">IPFS website&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Gnu/Linux&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Download and run the installation script for the Command Line Interface - CLI - tool from &lt;a href="https://docs.ipfs.io/how-to/command-line-quick-start/#install-ipfs">IPFS website&lt;/a>&lt;/li>
&lt;li>Download and run the installation package for the Graphical User Interface - GUI - desktop app from &lt;a href="https://github.com/ipfs-shipyard/ipfs-desktop#install">GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>macOS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Install using &lt;strong>&lt;a href="https://docs.brew.sh/Installation">Homebrew&lt;/a>&lt;/strong> package manager. &lt;code>brew install ipfs&lt;/code>&lt;/li>
&lt;li>Download the Desktop app from &lt;a href="https://github.com/ipfs-shipyard/ipfs-desktop#install">GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/ipfs/1.png" alt="">IPFS Desktop app&lt;/p>
&lt;hr>
&lt;h2 id="adding-your-static-mirror-to-ipfs">Adding your static mirror to IPFS&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;strong>Adding your static mirror to IPFS&lt;/strong> is a very simple process but there are some configuration which should be considered to make sure your website will be easily accessible.
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>After following &lt;a href="https://docs.ipfs.io/how-to/command-line-quick-start/#initialize-the-repository">IPFS guides&lt;/a> on how to get the application on your machine running, confirm&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">❯ ipfs --version
ipfs version 0.6.0
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Using your termianl, go to your static mirror directory.&lt;/li>
&lt;li>Run &lt;code>ipfs add -Q --recursive --progress mystaticmirror &lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/ipfs/2.png" alt="">&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">IPFS will&lt;/h4>
start adding your files to it&amp;rsquo;s &lt;a href="https://docs.ipfs.io/concepts/glossary/#datastore">Datastore&lt;/a>, and creating a unique &lt;a href="https://docs.ipfs.io/concepts/hashing/#hashes-are-important">hash&lt;/a> for every file, the hash of the root directory will be the final output, this will be the address of your mirror on IPFS network.
&lt;/div>
&lt;ul>
&lt;li>Now, we can try to access our mirror using IPFS and the hash of the root directory.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/ipfs/3.png" alt="">&lt;/p>
&lt;p>&lt;strong>There are two ways of accessing files on IPFS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Using a gateway&lt;/strong>
&lt;ul>
&lt;li>IPFS Gateway - &lt;a href="https://ipfs.io">ipfs.io&lt;/a>&lt;/li>
&lt;li>CloudFlare Gateway - &lt;a href="cloudflare-ipfs.com">cloudflare-ipfs.com&lt;/a>&lt;/li>
&lt;li>Pinata Gateway - &lt;a href="https://gateway.pinata.cloud">gateway.pinata.cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
There are several online gateways that provides a bridge between normal web and data stored on IPFS, you can do that by going to the gateway in your browser while appending &lt;strong>&lt;code>/ipfs/QmYn4A9jzkXob1iUPuwjpqxaMkrwE54ywvJUv2cE1s4egE&lt;/code>&lt;/strong> to the URL.
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>using the local client (peer-to-peer)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;p>This is the method IPFS should be functioning essentially.&lt;/p>
&lt;p>&lt;strong>You need to have IPFS installed on your machine for this method to work.&lt;/strong>&lt;/p>
&lt;/div>
&lt;ul>
&lt;li>Install &lt;a href="https://github.com/ipfs-shipyard/ipfs-companion">&lt;strong>IPFS Companion&lt;/strong>&lt;/a> browser extension and make sur IPFS is running on you machine.&lt;/li>
&lt;li>&lt;strong>When you enable the extension,&lt;/strong> it detects if your local IPFS daemon is running in the background and automatically rewrites any IPFS URL that contains a valid hash to be fetched using your local IPFS installation.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/ipfs/4.png" alt="">&lt;/p>
&lt;hr>
&lt;h3 id="updating-a-website-on-ipfs">Updating a website on IPFS&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Every time&lt;/h4>
you update your static mirror with new content, you will need to add the new version to IPFS again.
&lt;/div>
&lt;p>&lt;strong>As we mentioned earlier,&lt;/strong> IPFS depends on a hashing system to keep track of files, and since every file will create a unique hash, that means the final - root directory - hash will be different every time.&lt;/p>
&lt;p>This situation &lt;strong>presents a usability issue,&lt;/strong> as you will need somehow to share the new calculated hash with your audience every time you update your website, in order for them to be able to reach the most recent version of your website on IPFS.&lt;/p>
&lt;h4 id="enters-the-interplanetary-name-system-ipnshttpsdocsipfsioconceptsipns">Enters the Interplanetary Name System &lt;a href="https://docs.ipfs.io/concepts/ipns/">(IPNS)&lt;/a>&lt;/h4>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">IPNS&lt;/h4>
provides a solution similar to the regular web Domain Name System (DNS).
&lt;/div>
&lt;p>Using a locally generated key on your machine, IPNS will create a static hash, which will be published to the &lt;a href="https://en.wikipedia.org/wiki/Distributed_hash_table">Distributed hash table (DHT)&lt;/a>, this key can be linked to another hash and store it as value.&lt;/p>
&lt;p>Think about it (IPNS) as a domain name generator, it gives you a random hash, and register it in a table and store the most recent hash of your files as a value, IPFS users will just need the static IPNS hash to access your website.&lt;/p>
&lt;ul>
&lt;li>Generate a new IPFS key&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ipfs key gen --type=rsa --size=2048 mystaticsite&lt;/code>&lt;/p>
&lt;p>&lt;img src="../images/ipfs/5.png" alt="">The output will be your new IPNS address&lt;/p>
&lt;ul>
&lt;li>Publish your IPNS address and link it with your mirror&amp;rsquo;s most recent hash.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ipfs name publish --key=mystaticsite [replace with your files most recent hash]&lt;/code>&lt;/p>
&lt;p>&lt;img src="../images/ipfs/6.png" alt="">The output will confirmation for the linking between the IPNS address and the IPFS hash&lt;/p>
&lt;ul>
&lt;li>We can confirm that your new IPNS address is alive either by accessing it using a gateway i.e. | &lt;strong>&lt;code>ipfs.io/ipns/[put your IPNS hash here]&lt;/code>&lt;/strong> |, or &lt;strong>enable IPFS Companion browser extension&lt;/strong> to be redirected automatically to your local gateway&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/ipfs/7.png" alt="">&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>If you are adding large files/directories to IPFS.&lt;/p>
&lt;p>it might be a good idea to add &lt;code>--nocopy&lt;/code> parameter in the first step:&lt;/p>
&lt;p>&lt;code>ipfs add -Q --recursive --nocopy --progress mystaticmirror &lt;/code>&lt;/p>
&lt;p>this will tell IPFS not to make a full copy of every file in it&amp;rsquo;s datastore and will just create the hashes and use the original files, &lt;strong>which will save disk space.&lt;/strong>&lt;/p>
&lt;/div></description></item><item><title>Docs: Static Onion</title><link>/docs/alternative-publishing-methods/tor/staticonion.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/alternative-publishing-methods/tor/staticonion.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Advanced&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Linux / Ubuntu - Debian&lt;/strong>&lt;/p>
&lt;hr>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This guide will walk you through the process of creating &lt;strong>Onion Service&lt;/strong> for you static website.&lt;/p>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;strong>This guide&lt;/strong> focuses on creating a simple Onion service mainly in the context of censorship circumvention, if you are more concerned with the anonymity Tor provides in Onion services you should not depend on this guide alone, reading and understanding &lt;strong>&lt;a href="https://2019.www.torproject.org/docs/tor-onion-service.html.en">Tor project documentations&lt;/a>&lt;/strong> will best practice in that case, &lt;strong>as a ensuring full anonymity is an advanced and very details oriented process.&lt;/strong>
&lt;/div>
&lt;hr>
&lt;ul>
&lt;li>&lt;strong>Install Nginx webserver&lt;/strong>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Run the following commands in your terminal in their respective order&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo apt install software-properties-common
sudo add-apt-repository ppa:nginx/stable
sudo apt update &lt;span style="color:#555">&amp;amp;&amp;amp;&lt;/span> sudo apt install nginx -y
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="../images/onion-services/6.png" alt="">&lt;/p>
&lt;p>Confirm your installation by entering &lt;code>nginx -v&lt;/code>, the output should look similar to this&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Install Tor client&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;strong>If Tor Project Website and Tor communications are blocked in your country,&lt;/strong> probably the official &lt;strong>&lt;a href="https://deb.torproject.org/torproject.org">software repositories&lt;/a>&lt;/strong> are also blocked, in which case you should skip adding them and install Tor directly from &lt;strong>your distribution&amp;rsquo;s repositories.&lt;/strong>
&lt;/div>
&lt;blockquote>
&lt;p>Add in the following lines in &lt;code>/etc/apt/sources.list&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>deb https://deb.torproject.org/torproject.org stretch main
deb-src https://deb.torproject.org/torproject.org stretch main
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>Run the following commands in your terminal in their respective order&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --import
gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | sudo apt-key add -
sudo apt update &lt;span style="color:#555">&amp;amp;&amp;amp;&lt;/span> apt install tor deb.torproject.org-keyring
sudo apt update &lt;span style="color:#555">&amp;amp;&amp;amp;&lt;/span> sudo apt install tor
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Run the following commands to start Tor daemon&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo systemctl start tor
sudo systemctl &lt;span style="color:#366">enable&lt;/span> tor
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Confirm Tor is running without issues&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo systemctl status tor
tor --version
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="../images/onion-services/7.png" alt="">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Configure Tor client&lt;/strong>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>Open&lt;/strong> Tor config file at &lt;code>/etc/tor/torrc&lt;/code> with your favorite editor&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>vim /etc/tor/torrc&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Uncomment&lt;/strong> the following lines by removing the &lt;code>#&lt;/code>, and optionally, replace the directory name in &lt;code>/var/lib/tor/hidden_service/&lt;/code> with different name, specially if you are planning on hosting multiple Onion Services on the same server. i.e. &lt;code>/var/lib/tor/myfirstonion/&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>Before:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash"> &lt;span style="color:#f60">72&lt;/span> &lt;span style="color:#09f;font-style:italic">#HiddenServiceDir /var/lib/tor/hidden_service/&lt;/span>
&lt;span style="color:#f60">73&lt;/span> &lt;span style="color:#09f;font-style:italic">#HiddenServicePort 80 127.0.0.1:80&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>After&lt;/strong>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">HiddenServiceDir /var/lib/tor/myfirstonion/
HiddenServicePort &lt;span style="color:#f60">80&lt;/span> 127.0.0.1:80
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Restart Tor service&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>sudo systemctl restart tor&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>Confirm your Onion Service related files were generated at &lt;code>/var/lib/tor/myfirstonion/&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#366">cd&lt;/span> /var/lib/tor/myfirstonion/ &lt;span style="color:#555">&amp;amp;&amp;amp;&lt;/span> ls
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should find two files generated at this directory&lt;/p>
&lt;p>1- &lt;code>hostname&lt;/code> &lt;strong>contains your Onion Service address&lt;/strong>&lt;/p>
&lt;p>2- &lt;code>private_key&lt;/code> &lt;strong>Private key used for encryption. Don&amp;rsquo;t edit or share this file under any circumstances&lt;/strong>&lt;/p>
&lt;p>&lt;img src="../images/onion-services/8.png" alt="">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Configure Nginx Webserver&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>It&amp;rsquo;s very important to read Nginx documentations and follow the &lt;a href="https://riseup.net/en/security/network-security/tor/onionservices-best-practices">best practices&lt;/a> when configuring your Onion Service&lt;/strong>&lt;/p>
&lt;p>But essentially, you can get your Onion Service up &amp;amp; running by adding this simple config file to your &lt;code>/etc/nginx/sites-enabled&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="color:#069;font-weight:bold">server&lt;/span> {
&lt;span style="color:#069;font-weight:bold">listen&lt;/span> 127.0.0.1:&lt;span style="color:#f60">80&lt;/span>;
&lt;span style="color:#069;font-weight:bold">server_name&lt;/span> &lt;span style="color:#c30">[onion-address]&lt;/span>; &lt;span style="color:#09f;font-style:italic">#replace with your generated onion address, you can get that by executing : `cat /var/lib/[yourservicename]/hostname`
&lt;/span>&lt;span style="color:#09f;font-style:italic">&lt;/span> &lt;span style="color:#069;font-weight:bold">root&lt;/span> &lt;span style="color:#c30">/var/www/html/mystaticmirror&lt;/span>; &lt;span style="color:#09f;font-style:italic">#replace with your mirror&amp;#39;s files directory, and make sure the webserver user has access permissions to it.
&lt;/span>&lt;span style="color:#09f;font-style:italic">&lt;/span> &lt;span style="color:#069;font-weight:bold">client_max_body_size&lt;/span> &lt;span style="color:#c30">99M&lt;/span>;
&lt;span style="color:#069;font-weight:bold">port_in_redirect&lt;/span> &lt;span style="color:#360">off&lt;/span>;
&lt;span style="color:#069;font-weight:bold">charset&lt;/span> &lt;span style="color:#c30">utf-8&lt;/span>;
&lt;span style="color:#069;font-weight:bold">index&lt;/span> &lt;span style="color:#c30">index.html&lt;/span>;
&lt;span style="color:#069;font-weight:bold">location&lt;/span> &lt;span style="color:#c30">/&lt;/span> {
&lt;span style="color:#069;font-weight:bold">autoindex&lt;/span> &lt;span style="color:#360">off&lt;/span>;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>Testing your setup&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/onion-services/9.png" alt="">&lt;/p>
&lt;p>Make sure Both Nginx and Tor client are restarted and running succesfully, then head to your Tor Browser and test your new Onion address.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>[Optional] - announcing your new mirror for Tor browser users&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;p>&lt;a href="https://community.torproject.org/onion-services/advanced/onion-location/">&lt;strong>Onion-Location&lt;/strong>&lt;/a> is a new feature implemented in Tor Browser.&lt;/p>
&lt;p>It essentially allows you to &lt;strong>announce your Onion mirror&lt;/strong> for Tor Browser users when they access your original website, through adding an &lt;strong>HTTP Header&lt;/strong> using your webserver, or adding specific &lt;strong>HTML &lt;code>&amp;lt;meta&amp;gt;&lt;/code>&lt;/strong> to your &lt;code>index.html&lt;/code> page.&lt;/p>
&lt;/div>
&lt;p>&lt;strong>HTTP Header&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Apache&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-apache" data-lang="apache">&lt;span style="color:#309;font-weight:bold">&amp;lt;VirtualHost&lt;/span> &lt;span style="color:#c30">*:443&lt;/span>&lt;span style="color:#309;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#366">ServerName&lt;/span> &amp;lt;your-website.tld&amp;gt;
&lt;span style="color:#366">DocumentRoot&lt;/span> &lt;span style="color:#c30">/path/to/htdocs&lt;/span>
&lt;span style="color:#366">Header&lt;/span> set Onion-Location &lt;span style="color:#c30">&amp;#34;http://your-onion-address.onion%{REQUEST_URI}s&amp;#34;&lt;/span>
&lt;span style="color:#366">SSLEngine&lt;/span> &lt;span style="color:#069;font-weight:bold">on&lt;/span>
&lt;span style="color:#366">SSLCertificateFile&lt;/span> &lt;span style="color:#c30">&amp;#34;/path/to/www.example.com.cert&amp;#34;&lt;/span>
&lt;span style="color:#366">SSLCertificateKeyFile&lt;/span> &lt;span style="color:#c30">&amp;#34;/path/to/www.example.com.key&amp;#34;&lt;/span>
&lt;span style="color:#309;font-weight:bold">&amp;lt;/VirtualHost&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Nginx&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="color:#069;font-weight:bold">add_header&lt;/span> &lt;span style="color:#c30">Onion-Location&lt;/span> &lt;span style="color:#c30">http://&amp;lt;your-onion-address&amp;gt;.onion&lt;/span>&lt;span style="color:#033">$request_uri&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>HTML &lt;code>&amp;lt;meta&amp;gt;&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#309;font-weight:bold">meta&lt;/span> &lt;span style="color:#309">http-equiv&lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#c30">&amp;#34;onion-location&amp;#34;&lt;/span> &lt;span style="color:#309">content&lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#c30">&amp;#34;http://&amp;lt;your-onion-service-address&amp;gt;.onion&amp;#34;&lt;/span> /&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;strong>When&lt;/strong> everything is well configured and working, visitors of your original Clearnet website using Tor browser, should be notified about the availability of the Onion mirror and it&amp;rsquo;s address.
&lt;/div>
&lt;p>&lt;img src="../images/onion-services/10.png" alt="">&lt;/p></description></item><item><title>Docs: Encrypted SNI</title><link>/docs/alternative-publishing-methods/esni/esni.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/alternative-publishing-methods/esni/esni.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Advanced&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Any&lt;/strong>&lt;/p>
&lt;hr>
&lt;h3 id="what-is-server-name-indication-sni">What is Server Name Indication (SNI)?&lt;/h3>
&lt;p>&lt;strong>Server Name Indication (SNI) is an extension to the Transport Layer Security (TLS) network encrypted protocol.&lt;/strong>&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;strong>Essentially,&lt;/strong> SNI&amp;rsquo;s purpose is to send the requested domain name to the webserver in the form of plain/text HTTP header, so the server will send back the appropriate response to initiate the encrypted connection.
&lt;/div>
&lt;p>&lt;strong>SNI was originally &lt;a href="https://tools.ietf.org/html/rfc3546">standardized in 2003&lt;/a>,&lt;/strong> it&amp;rsquo;s wide implementation is a big part of today&amp;rsquo;s Internet infrastructure, mainly because it allowed hosting multiple websites with different domain names on the same webserver.&lt;/p>
&lt;p>Since then, the SNI header is a main target in any Deep Packet Inspection (DPI) operations, to preliminarily detect traffic to specific host before blocking. &lt;a href="https://blog.cloudflare.com/encrypted-sni/">read more about SNI and the issues it presents&lt;/a>&lt;/p>
&lt;h3 id="what-is-encrypted-sni-and-how-can-it-help">What is Encrypted SNI and how can it help?&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
&lt;p>&lt;a href="https://tools.ietf.org/html/draft-ietf-tls-esni-06">Encrypted SNI (ESNI)&lt;/a> is a new suggested extension, it uses asymmetric encryption key to encrypt the SNI header, the server publishes the public key &lt;code>well-known&lt;/code> DNS record and the client fetches the key using DNS.&lt;/p>
&lt;p>Current implementations of ESNI requires DNS over HTTPS (DoH) in order to work.&lt;/p>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Encrypted SNI is still not standardized, which means that it&amp;rsquo;s still in early development stages and might undergo a lot of changes on it&amp;rsquo;s way to be a widely implemented standard
&lt;/div>
&lt;hr>
&lt;h3 id="how-to-test-encrypted-sni">How to test Encrypted SNI?&lt;/h3>
&lt;p>Some projects are trying to test for the best implementation of ESNI, or how to integrate it with major software stacks i.e. &lt;a href="https://github.com/sftcd/nginx">Nginx&lt;/a>, and &lt;a href="https://github.com/sftcd/openssl/tree/master/esnistuff">OpenSSL&lt;/a>.&lt;/p>
&lt;p>&lt;strong>If you are interested in a deeper technical understanding of ESNI you can check out these projects&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://defo.ie/">Developing ESNI for OpenSSL (DEfO)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/SixGenInc/Noctilucent">Noctilucent&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="alert alert-primary" role="alert">
In this guide, we will use the most stable and tested implementation which comes with CloudFlare and Mozilla Firefox
&lt;/div>
&lt;h3 id="server-side">Server Side&lt;/h3>
&lt;p>&lt;strong>Currently,&lt;/strong> the only stable and tested server side implementation of ESNI is &lt;a href="https://blog.cloudflare.com/esni/">CloudFlare&lt;/a>.&lt;/p>
&lt;p>All you have to do is to enable &lt;strong>TLS 1.3&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Log in&lt;/strong> to your &lt;strong>CloudFlare account,&lt;/strong> select your &lt;strong>domain name&lt;/strong>, go to &amp;gt; &lt;code>SSL/TLS&lt;/code> options, choose &amp;gt; &lt;code>Edge Certificates&lt;/code>, and make sure &amp;gt; &lt;code>TLS 1.3&lt;/code> is enabled.&lt;/p>
&lt;p>&lt;img src="../images/esni/1.png" alt="">&lt;/p>
&lt;h3 id="client-side">Client Side&lt;/h3>
&lt;p>Mozilla Firefox latest releases are shipped with TLSv1.3 and ESNI extension support, yet, it doesn&amp;rsquo;t come enabled by default for now.&lt;/p>
&lt;p>&lt;strong>To enable ESNI support in Mozilla Firefox&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Make Firefox is updated to latest release&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/esni/2.png" alt="">&lt;/p>
&lt;ul>
&lt;li>Enable DNS over HTTPS (DoH) in &lt;code>Preferences&lt;/code> &amp;gt; &lt;code>Network Settings&lt;/code> &amp;gt; &lt;code>Enable DNS over HTTPS&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/esni/3.png" alt="">&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>CloudFlare DoH resolver &lt;strong>might be blocked&lt;/strong> in your country. &lt;strong>&lt;a href="https://1.1.1.1/help">Check here&lt;/a>.&lt;/strong>&lt;/p>
&lt;p>If that&amp;rsquo;s the case, you can try changing &lt;code>Next DNS&lt;/code>, or choose &lt;code>Custom&lt;/code> and test the public resolver - with DoH support - from &lt;strong>&lt;a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">this list&lt;/a>.&lt;/strong>&lt;/p>
&lt;/div>
&lt;ul>
&lt;li>Enable ESNI extension support
&lt;ul>
&lt;li>Open a &lt;strong>new tab&lt;/strong> and type the address &lt;code>about:config&lt;/code>&lt;/li>
&lt;li>&lt;strong>Click&lt;/strong> &lt;code>Accept the Risk and Continue&lt;/code>&lt;/li>
&lt;li>&lt;strong>Search&lt;/strong> for &lt;code>network.security.esni.enabled&lt;/code>&lt;/li>
&lt;li>&lt;strong>Click&lt;/strong> on the value to change it from &lt;code>False&lt;/code> to &lt;code>True&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Restart&lt;/strong> your browser and test your settings &lt;a href="https://www.cloudflare.com/ssl/encrypted-sni/">here&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/esni/4.png" alt="">&lt;/p>
&lt;p>&lt;img src="../images/esni/5.png" alt="">&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Test your website&lt;/h4>
&lt;p>by adding visiting this address in your browser &lt;code>https://[yourdomain.com]/cdn-cgi/trace&lt;/code> i.e. &lt;code>https://www.cloudflare.com/cdn-cgi/trace&lt;/code>&lt;/p>
&lt;p>You should get these &lt;strong>values:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>tls=TLSv1.3
sni=encrypted
&lt;/code>&lt;/pre>
&lt;/div>
&lt;hr>
&lt;h3 id="resources-and-readings">Resources and readings&lt;/h3>
&lt;ul>
&lt;li>CloudFlare : &lt;a href="https://blog.cloudflare.com/encrypt-that-sni-firefox-edition/">Encrypt that SNI: Firefox edition&lt;/a>&lt;/li>
&lt;li>CloudFlare : &lt;a href="https://blog.cloudflare.com/encrypted-sni/">Encrypt it or lose it: how encrypted SNI works&lt;/a>&lt;/li>
&lt;li>IETF : &lt;a href="https://tools.ietf.org/html/rfc3546">Transport Layer Security (TLS) Extensions&lt;/a>&lt;/li>
&lt;li>IETF : &lt;a href="https://tools.ietf.org/html/draft-ietf-tls-esni-07">TLS Encrypted Client Hello - draft-ietf-tls-esni-07&lt;/a>&lt;/li>
&lt;li>Chromium Support Status : &lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=908132">Issue 908132&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://defo.ie/">Developing ESNI for OpenSSL (DEfO)&lt;/a>&lt;/li>
&lt;li>Mozilla : &lt;a href="https://blog.mozilla.org/security/2018/10/18/encrypted-sni-comes-to-firefox-nightly/">Encrypted SNI Comes to Firefox Nightly - October 18, 2018&lt;/a>&lt;/li>
&lt;li>If you want to test ESNI further, or develop something for it - &lt;a href="https://github.com/SixGenInc/Noctilucent">Noctilucent&lt;/a>&lt;/li>
&lt;li>For better understanding of &lt;a href="https://www.cloudflare.com/learning/dns/dns-over-tls/">DNS over HTTPS (DoH)&lt;/a> and other &lt;a href="https://dnsprivacy.org/wiki/">DNS privacy related materials&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Wget</title><link>/docs/static-mirroring/wget-guide.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/static-mirroring/wget-guide.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Beginner / Intermediate&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Gnu/Linux | macOS | MS Windows | Android | BSD&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
&lt;strong>Wget&lt;/strong> is a cli-based software that retrieves web content, it supports HTTP, HTTPS, and FTP protocols.
&lt;/div>
&lt;strong>One of Wget’s features&lt;/strong> is the ability to scan and index the entirety of a website and download a fully functional static clone of the original website.&lt;/p>
&lt;p>The static clone can be later refreshed and updated with new content published to the original website.
While there are different ways of performing this task using Wget, you may get different results depending on your original website properties, including the CMS being used, the web server configurations, any kind of DDoS protection and online asset&amp;rsquo;s protection e.g. images and videos.&lt;/p>
&lt;hr>
&lt;h3 id="install-wget">Install Wget&lt;/h3>
&lt;p>&lt;strong>MS Windows&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://chocolatey.org/install">Chocolatey&lt;/a> package manager for MS Windows&lt;/p>
&lt;p>&lt;code>choco install wget&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Gnu/Linux&lt;/strong>&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
As Wget is a Gnu developed software, it’s available in most distributions main repositories, the installation process should be as simple as using your distribution’s package manager.
&lt;/div>
&lt;blockquote>
&lt;p>Examples&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;code>apt install wget&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>dnf install wget&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>pacman -S wget&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>macOS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Install using &lt;a href="https://brew.sh/">Homebrew&lt;/a> package manager&lt;/p>
&lt;p>&lt;code>brew install wget&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install using &lt;a href="https://www.macports.org/install.php">Macports&lt;/a>&lt;/p>
&lt;p>&lt;code>port install wget&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="pulling-the-website-to-your-local-machine">Pulling the website to your local machine&lt;/h3>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
We will be using some basic parameters for Wget which should work for the majority of websites, but you may need to refer to the &lt;a href="https://www.gnu.org/software/wget/manual/wget.html">manual pages of Wget&lt;/a> in case of needing to do some tweaks or solve an issue with the resulting mirror.
&lt;/div>
&lt;p>&lt;code>wget --mirror --convert-links --adjust-extension --page-requisites http://example.org&lt;/code>&lt;/p>
&lt;h5 id="parameters-and-options-description">Parameters and options description&lt;/h5>
&lt;p>&lt;code>--mirror&lt;/code>&lt;/p>
&lt;p>Turn on options suitable for mirroring. This option turns on recursion and time-stamping, sets infinite recursion depth and keeps FTP directory listings.&lt;/p>
&lt;p>-&lt;code>-convert-links&lt;/code>&lt;/p>
&lt;p>After the download is complete, convert the links in the document to make them suitable for local viewing. This affects not only the visible hyperlinks, but any part of the document that links to external content, such as embedded images, links to style sheets, hyperlinks to non-HTML content, etc.&lt;/p>
&lt;p>&lt;code>--adjust-extension&lt;/code>&lt;/p>
&lt;p>If some link points to &lt;code>//foo.com/bar.cgi?xyz&lt;/code> with &lt;code>--adjust-extension&lt;/code> asserted and its local destination is intended to be .&lt;code>/foo.com/bar.cgi?xyz.css&lt;/code>, then the link would be converted to &lt;code>//foo.com/bar.cgi?xyz.css&lt;/code>. Note that only the filename part has been modified. The rest of the URL has been left untouched, including the net path &lt;code>(&amp;quot;//&amp;quot;)&lt;/code> which would otherwise be processed by Wget and converted to the effective scheme &lt;code>(ie. &amp;quot;http://&amp;quot;)&lt;/code>.&lt;/p>
&lt;p>&lt;code>--page-requisites&lt;/code>&lt;/p>
&lt;p>This option causes Wget to download all the files that are necessary to properly display a given HTML page. This includes such things as inlined images, sounds, and referenced stylesheets.&lt;/p>
&lt;hr>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Tip&lt;/h4>
&lt;a href="https://gitlab.com/gnuwget/wget2">Wget2&lt;/a> is currently being developed, while it’s not stable yet but it’s a full rewrite of the original Wget and meant to replace it in the near future. Wget2 comes with many new features such as HTTP/2.0 support and multi-threaded download which can make the process of pulling large websites way faster.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
For websites operating behind Cloudflare, this process can be identified as malicious behaviour as many simultaneous requests are coming from one IP address in short intervals, this can result in partial downloads or failing to download some assets such as inline images and CSS files.
&lt;/div>
&lt;p>&lt;strong>This can be solved&lt;/strong> by either &lt;strong>whitelisting your IP address on Cloudflare&lt;/strong> and disable assets protection features during the crawling process, or configure the origin server to &lt;strong>allow direct access&lt;/strong> on a different domain/sub-domain with &lt;a href="https://en.wikipedia.org/wiki/Basic_access_authentication">basic authentication&lt;/a> enabled, you can then add &lt;code>--http-user=[HTTP-USER]&lt;/code> &lt;code>--http-passwd=[HTTP-PASSWORD]&lt;/code> parameters to your Wget command to authenticate.&lt;/p></description></item><item><title>Docs: HTTrack</title><link>/docs/static-mirroring/httrack-guide.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/static-mirroring/httrack-guide.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Beginner / Intermediate&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Gnu/Linux | macOS | MS Windows | Android | BSD&lt;/strong>&lt;/p>
&lt;hr>
&lt;div class="alert alert-primary" role="alert">
&lt;p>&lt;strong>HTTrack&lt;/strong> is a free software developed for the specific purpose of downloading fully functional offline copies of any website.&lt;/p>
&lt;blockquote>
&lt;p>It has many advantages over Wget, and offers a graphical user interface. While it’s not being updated since 2017, it proofed to be efficient in most use cases in our testing scenarios.&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;h3 id="install-httrack">Install HTTrack&lt;/h3>
&lt;p>&lt;strong>Windows&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://chocolatey.org/install">Chocolatey&lt;/a> package manager for MS Windows&lt;/p>
&lt;p>&lt;code>choco install httrack&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Or you can download the installation file &lt;a href="https://www.httrack.com/page/2/en/index.html">here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Gnu/Linux&lt;/strong>&lt;/p>
&lt;div class="alert alert-primary" role="alert">
Since HTTrack is available in most major distributions main repositories, you can use your package manager to directly install the compiled version.
&lt;/div>
&lt;blockquote>
&lt;p>Example&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>apt install httrack&lt;/code>&lt;/li>
&lt;li>&lt;code>dnf install httrack&lt;/code>&lt;/li>
&lt;li>&lt;code>pacman -S httrack&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
In this &lt;a href="https://www.httrack.com/page/2/en/index.html">page&lt;/a> you can find instructions on downloading and building HTTrack from source.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Also, a version with a graphical user interface exists for Gnu/Linux but still in beta, you can find the source &lt;a href="https://sourceforge.net/projects/httraqt/">here&lt;/a>
&lt;/div>
&lt;p>&lt;strong>macOS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Using Homebrew package manager&lt;/p>
&lt;p>&lt;code>brew install httrack&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Using Macports&lt;/p>
&lt;p>&lt;code>sudo port install httrack&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="pulling-the-website-to-your-local-machine">Pulling the website to your local machine&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">httrack --mirror --robots&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#f60">0&lt;/span> --stay-on-same-domain --user-agent &lt;span style="color:#c30">&amp;#34;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0&amp;#34;&lt;/span> --keep-links&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#f60">0&lt;/span> --path example.org --quiet https://example.org/ -* +example.org/*
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="parameters-and-options-description">Parameters and options description&lt;/h5>
&lt;p>&lt;code>--mirror&lt;/code>&lt;/p>
&lt;p>Mirror websites&lt;/p>
&lt;p>&lt;code>--robots=0&lt;/code>&lt;/p>
&lt;p>Follow robots.txt and meta robots tags (0=never,1=sometimes,* 2=always, 3=always (even strict rules)) (&amp;ndash;robots[=N])&lt;/p>
&lt;p>&lt;code>--stay-on-same-domain&lt;/code>&lt;/p>
&lt;p>Stay on the same principal domain&lt;/p>
&lt;p>&lt;code>--user-agent &amp;quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0&amp;quot;&lt;/code>&lt;/p>
&lt;p>User-agent field sent in HTTP headers&lt;/p>
&lt;p>&lt;code>--keep-links=0&lt;/code>&lt;/p>
&lt;p>keep original links (e.g. &lt;a href="http://www.adr/link">http://www.adr/link&lt;/a>) (&lt;code>--keep-links=0&lt;/code> *relative link, &lt;code>--keep-links&lt;/code> absolute links, &lt;code>--keep-links=4&lt;/code> original links, &lt;code>--keep-links=3&lt;/code> absolute URI links, &lt;code>--keep-links=5&lt;/code> transparent proxy link)&lt;/p>
&lt;p>&lt;code>--path example.org&lt;/code>&lt;/p>
&lt;p>Path for mirror/logfiles+cache (&lt;code>--path&lt;/code> mirror[,path cache and logfiles])&lt;/p>
&lt;p>&lt;code>--quiet&lt;/code>&lt;/p>
&lt;p>no questions - quiet mode&lt;/p>
&lt;p>&lt;code>https://example.org/ -*&lt;/code>&lt;/p>
&lt;p>Replace example.org with the website you want to mirror&lt;/p>
&lt;p>&lt;code>+example.org/*&lt;/code>&lt;/p>
&lt;p>HTTrack will crawl and scan the whole website, renders every and save it locally to your machine in an offline browsable form. The suggested combination of arguments will convert the inline URLs to relative links which can be hosted virtually anywhere.&lt;/p>
&lt;p>&lt;code>httrack --continue&lt;/code>&lt;/p>
&lt;p>In case of intercepted or uncompleted download process HTTrack will use the cache to resume the download process and make sure it won’t include re-downloading the same unchanged assets.&lt;/p>
&lt;p>&lt;code>httrack --update&lt;/code>&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>Here we need to consider a very important note about how HTTrack functions.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Normally&lt;/strong> there will be a cached version of all downloaded assets saved in a directory under the main project’s directory named hts-cache, the cache will be used in every update presumably to avoid having to crawl and download the whole website with every update, which can be a very time-consuming process especially with big websites.&lt;/p>
&lt;p>&lt;strong>However&lt;/strong>, in our testing with different websites of different sizes and structures, the real-life scenario turned to be different from what the software documentations provides.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;em>For example&lt;/em> with a big WordPress website running relatively recent version of Nginx web server and operating behind a Cloudflare proxy, the cache never helped to reduce the update times needed to refresh the static copy with new published content and HTTrack was almost crawling all over the website with every update.
&lt;/div>
&lt;p>This can be connected with many elements, among them will that HTTrack is a relatively old software which didn’t receive any updates since 2017 therefore it’s support for the most recent changes in the web structure and technologies isn’t the best.&lt;/p>
&lt;p>&lt;strong>One other element&lt;/strong> &lt;em>which will cause great impact and change of behavior in any tools doing the same functionality,&lt;/em> will be dealing with different configuration and installations of Web servers, CMS, and security measurements.&lt;/p>
&lt;p>&lt;strong>We encourage&lt;/strong> you to dig deeper in HTTrack documentation to find options and arguments which can help to find the best suited configuration for your setup.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
When using HTTrack &lt;em>- and almost any website downloader -,&lt;/em> while you are using Cloudflare proxy and DDoS protection for your website, it’s highly important to set a &lt;code>user-agent&lt;/code> in the arguments and make sure the chosen &lt;code>user-agent&lt;/code> isn’t blocked in the security settings in your web server and Cloudflare.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>&lt;strong>With big websites&lt;/strong>, many security settings and tools might identify the constant crawling and multiple hits in short time intervals as malicious behavior and block or throttle your IP address&amp;rsquo;s connection to the website.&lt;/p>
&lt;p>&lt;strong>In that case&lt;/strong> you should revise your security settings and find the maximum allowed connections then you can use arguments like &lt;code>--max-rate=N&lt;/code>, &lt;code>--connection-per-second=N&lt;/code>, &lt;code>--max-pause=N&lt;/code> to limit HTTrack traffic hitting your website to the maximum allowed numbers.&lt;/p>
&lt;p>Also, you should consider whitelisting your IP address in your security settings if the option exists.&lt;/p>
&lt;/div></description></item><item><title>Docs: WordPress Plugins</title><link>/docs/static-mirroring/wpplugins.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/static-mirroring/wpplugins.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Beginner / Intermediate&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Gnu/Linux | macOS | MS Windows | BSD&lt;/strong>&lt;/p>
&lt;hr>
&lt;h2 id="wp2statichttpsgithubcomwp2static">&lt;a href="https://github.com/WP2Static">WP2Static&lt;/a>&lt;/h2>
&lt;p>&lt;img src="../images/wp2static/1.png" alt="">WP2Static options&lt;/p>
&lt;blockquote>
&lt;p>WP2Static can be considered as the most optimal plugin for the purpose of generating and updating a static mirror.&lt;/p>
&lt;/blockquote>
&lt;p>This plugin also offers different deployment sub-plugins which can configure direct deployments to platforms like Amazon S3 and GitHub.&lt;/p>
&lt;p>&lt;strong>However&lt;/strong>, it&amp;rsquo;s plugin development process itself doesn’t seem to be stable, at the time of writing these documentations, it appears to be transitioning to a new approach and undergoing big changes.&lt;/p>
&lt;p>&lt;a href="https://wordpress.org/plugins/static-html-output-plugin/">An old version of the plugin&lt;/a> was recently flagged as closed in WordPress’s plugins platform, and the developed published his &lt;a href="https://staticword.press/t/removal-of-wp2static-from-wordpress-org/159">reasoning&lt;/a> behind this approach.&lt;/p>
&lt;p>&lt;strong>Two different versions&lt;/strong> of the plugin however will continue to be available through the developer&amp;rsquo;s &lt;a href="https://wp2static.com/">website&lt;/a> and &lt;a href="https://github.com/WP2Static">GitHub repository&lt;/a>.&lt;/p>
&lt;p>The &lt;strong>old version&lt;/strong> renamed as &lt;a href="https://github.com/WP2Static/static-html-output-plugin">static-html-output-plugin&lt;/a>, will be available pre-built and ready to install on the website download section.&lt;/p>
&lt;p>The &lt;strong>new version&lt;/strong> named as &lt;a href="https://github.com/WP2Static/wp2static">WP2Static&lt;/a>, while still being considered as &lt;strong>experimental&lt;/strong>, it performed well in our testing &lt;strong>&lt;em>but it needs to be built from the source before installing on WordPress.&lt;/em>&lt;/strong>&lt;/p>
&lt;hr>
&lt;h3 id="downloading-and-building-the-new-plugin">Downloading and building the new plugin&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Clone the repository.&lt;/p>
&lt;p>&lt;code>git clone https://github.com/WP2Static/wp2static.git&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install &lt;a href="https://getcomposer.org/">Composer&lt;/a> and PHP on your local machine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Change to the plugins source code directory.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Build the plugin using&lt;/p>
&lt;p>&lt;code>composer install&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Compress the plugin directory into a .zip archive&lt;/p>
&lt;p>&lt;code>zip -r wp2static.zip wp2static&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>&lt;strong>Same steps are required&lt;/strong> for each sub-plugin which you will need for automating deployments to differant hosting platforms such as Amazon S3 or GitHub.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Sub-plugins should be installed manually as separate plugins on WordPress.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sub-plugins will show under Add-Ons section in WP2Static settings and needs to be enabled and configured.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;hr>
&lt;h3 id="wp2static-settings-and-configuration">WP2Static settings and configuration&lt;/h3>
&lt;p>&lt;img src="../images/wp2static/2.png" alt="">Select which content types should be included in the mirror, and the deployment URL&lt;/p>
&lt;p>&lt;img src="../images/wp2static/3.png" alt="">After installing any deployment Add-On it should be displayed here&lt;/p>
&lt;p>&lt;img src="../images/wp2static/4.png" alt="">Example for Amazon S3 deployment Add-On options&lt;/p>
&lt;p>&lt;img src="../images/wp2static/5.png" alt="">Here you will find useful diagnostic information about your installation and it&amp;rsquo;s compatibility with the plugin requirements&lt;/p>
&lt;h2 id="simply-statichttpswordpressorgpluginssimply-static">&lt;a href="https://wordpress.org/plugins/simply-static/">Simply static&lt;/a>&lt;/h2>
&lt;p>&lt;img src="../images/simplystatic/1.png" alt="">Simply Static options&lt;/p>
&lt;p>&lt;strong>Simply Static&lt;/strong> is a WordPress Plugin with similar functionality to WP2Static. However, it comes with fewer features and might not fit the needs of a big and/or very frequently updated website, as for example, it doesn’t support incremental builds for the static mirror, which means it needs to go through the whole process every time a build is triggered.&lt;/p>
&lt;p>Furthermore, Simply Static doesn’t support automatic builds triggering with every new post, so a new build can only be triggered manually, which makes this plugin more fit for small blogs or rarely updated websites.&lt;/p>
&lt;h3 id="simply-static-settings-and-configuration">Simply Static settings and configuration&lt;/h3>
&lt;p>&lt;img src="../images/simplystatic/2.png" alt="">Simply Static options&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>You can set the &lt;code>Delivery Method&lt;/code> to &lt;code>Local Directory&lt;/code> to have the generated static files stored on the same server/machine&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Make sure the web-server user have write privileges on the selected directory&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you are planning on hosting your static website on an object storage platform such as S3, you should make sure to &lt;code>Use relative URLs&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>&lt;img src="../images/simplystatic/3.png" alt="">Here you will find useful diagnostic information about your installation and it&amp;rsquo;s compatibility with the plugin requirements&lt;/p></description></item><item><title>Docs: Hosting on Amazon S3</title><link>/docs/static-mirroring/static-hosting/amazons3.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/static-mirroring/static-hosting/amazons3.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Intermediate&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Any&lt;/strong>&lt;/p>
&lt;hr>
&lt;div class="alert alert-primary" role="alert">
&lt;blockquote>
&lt;p>&lt;strong>Amazon S3&lt;/strong> (Amazon Simple Storage Service) is a data storage service and one of the Amazon Web Services (AWS)&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;p>S3 provides &lt;strong>object storage&lt;/strong> service, which means that data is stored and addressed as objects, each object contains it&amp;rsquo;s own data in addition to meta-data and a unique identifier.&lt;/p>
&lt;p>&lt;strong>Object storage&lt;/strong> is often used to store big amounts of data that doesn&amp;rsquo;t need the features and structure of the file systems hierarchy.&lt;/p>
&lt;p>The &lt;strong>main&lt;/strong> advantage of using S3 to host our static mirror is the ability to serve a fully functional &lt;strong>&amp;ldquo;static&amp;rdquo;&lt;/strong> web pages directly from Amazon S3 URLs which consists of &lt;code>[bucketname]+[endpoint]&lt;/code> or &lt;code>[endpoint]/[bucketname]&lt;/code> ex: &lt;code>mybucket.s3.us-east-2.amazonaws.com&lt;/code> or &lt;code>https://s3.us-east-2.amazonaws.com/mybucket&lt;/code>&lt;/p>
&lt;hr>
&lt;h2 id="configure-static-site-hosting-on-s3">Configure static site hosting on S3&lt;/h2>
&lt;h3 id="creating-s3-bucket-and-setting-configurations-for-static-site-hosting">Creating S3 bucket, and setting configurations for Static Site hosting&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>First,&lt;/strong> you need to create an account on &lt;strong>&lt;a href="https://aws.amazon.com/">Amazon Web Services (AWS)&lt;/a>&lt;/strong>, and then, &lt;strong>sign in&lt;/strong> to &lt;strong>&lt;a href="https://signin.aws.amazon.com">AWS Console&lt;/a>.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/1.png" alt="">AWS login page&lt;/p>
&lt;ul>
&lt;li>In &lt;strong>&lt;a href="https://s3.console.aws.amazon.com">S3 management console&lt;/a>&lt;/strong>, create a new bucket.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/2.png" alt="">S3 management console&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
You should pick a unique name for your bucket.
&lt;/div>
&lt;p>&lt;img src="../images/hosting-s3/3.png" alt="">S3 new bucket&lt;/p>
&lt;ul>
&lt;li>In &lt;strong>Set permissions&lt;/strong> tab, uncheck &lt;strong>&lt;input disabled="" type="checkbox"> Block &lt;em>all&lt;/em> public access&lt;/strong>, and confirm that you want to enable public access to the bucket.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/4.png" alt="">Bucket permission tab&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Finally,&lt;/strong> review your options and &lt;strong>create&lt;/strong> the new bucket.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/5.png" alt="">Create bucket&lt;/p>
&lt;ul>
&lt;li>Your newly created bucket should appear in this form.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/6.png" alt="">&lt;/p>
&lt;ul>
&lt;li>Head to the new bucket&amp;rsquo;s settings by clicking on the bucket name.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/7.png" alt="">S3 bucket settings&lt;/p>
&lt;ul>
&lt;li>In &lt;strong>Properties&lt;/strong> tab click on &lt;strong>Static website hosting&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/8.png" alt="">S3 bucket Properties&lt;/p>
&lt;ul>
&lt;li>After setting &lt;strong>Use this bucket to host a website&lt;/strong>, you need to set the &lt;strong>path&lt;/strong> for your &lt;code>index.html&lt;/code>(main page), &lt;strong>optionally&lt;/strong> you can set a custom &lt;code>error.html&lt;/code> page, and click &lt;strong>save&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/9.png" alt="">S3 Static website hosting&lt;/p>
&lt;p>&lt;img src="../images/hosting-s3/10.png" alt="">S3 enabled Static website hosting&lt;/p>
&lt;div class="alert alert-primary" role="alert">
Now, we need to set the &lt;strong>bucket permissions policy&lt;/strong> to allow public read for all objects.
&lt;/div>
&lt;ul>
&lt;li>Head to &lt;strong>Permissions&lt;/strong> tab, and click on &lt;strong>Bucket Policy&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/11.png" alt="">S3 bucket policy&lt;/p>
&lt;ul>
&lt;li>The simplest form of static website hosting policy on S3 should look like this.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#309;font-weight:bold">&amp;#34;Version&amp;#34;&lt;/span>: &lt;span style="color:#c30">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;span style="color:#309;font-weight:bold">&amp;#34;Statement&amp;#34;&lt;/span>: [
{
&lt;span style="color:#309;font-weight:bold">&amp;#34;Sid&amp;#34;&lt;/span>: &lt;span style="color:#c30">&amp;#34;PublicReadGetObject&amp;#34;&lt;/span>,
&lt;span style="color:#309;font-weight:bold">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#c30">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;span style="color:#309;font-weight:bold">&amp;#34;Principal&amp;#34;&lt;/span>: &lt;span style="color:#c30">&amp;#34;*&amp;#34;&lt;/span>,
&lt;span style="color:#309;font-weight:bold">&amp;#34;Action&amp;#34;&lt;/span>: [
&lt;span style="color:#c30">&amp;#34;s3:GetObject&amp;#34;&lt;/span>
],
&lt;span style="color:#309;font-weight:bold">&amp;#34;Resource&amp;#34;&lt;/span>: [
&lt;span style="color:#c30">&amp;#34;arn:aws:s3:::example.com/*&amp;#34;&lt;/span>
]
}
]
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In this example bucket policy &lt;code>example.com&lt;/code> is the bucket name. To use this policy example you need to replace &lt;code>example.com&lt;/code> with your newly created bucket name in the &lt;code>&amp;quot;Resources&amp;quot;&lt;/code> key value.
&lt;/div>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Now, we are ready to upload our &lt;strong>static mirror&lt;/strong> to our S3 bucket.&lt;/p>
&lt;/div>
&lt;h3 id="upload-using-the-web-user-interface">Upload using the Web user interface&lt;/h3>
&lt;ul>
&lt;li>You will find the upload option in the bucket settings page.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/12.png" alt="">S3 files upload&lt;/p>
&lt;ul>
&lt;li>Make sure &lt;strong>grant public read access&lt;/strong> to the uploaded files in the permissions tab.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/13.png" alt="">S3 files upload permissions&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;strong>While&lt;/strong> you can easily upload your website files directly in the browser by clicking on &lt;strong>Upload&lt;/strong> in the bucket settings page, it&amp;rsquo;s preferred to use &lt;strong>AWS CLI&lt;/strong>, specially if when you are uploading large websites.
&lt;/div>
&lt;hr>
&lt;h4 id="install-aws-command-line-interfacehttpsdocsawsamazoncomclilatestuserguideinstall-cliv2html">&lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html">Install AWS Command Line Interface&lt;/a>&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>MS Windows&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://awscli.amazonaws.com/AWSCLIV2.msi">Download&lt;/a>&lt;/strong> and install the official installation file&lt;/li>
&lt;li>Install using &lt;strong>&lt;a href="https://chocolatey.org/packages/awscli">Chocolatey&lt;/a>&lt;/strong> windows package manager &lt;code>choco install awscli&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Gnu/Linux&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Normally,&lt;/strong> you will fine AWS CLI package available in your distribution software repositories, in that case you can simply use your package manager to install it directly. ex: &lt;code>apt install awscli&lt;/code>&lt;/li>
&lt;li>If that&amp;rsquo;s not the case, you can install it &lt;strong>manually&lt;/strong> by executing these commands in your terminal in their respective order.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Linux x86 (64-bit)&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl &lt;span style="color:#c30">&amp;#34;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&amp;#34;&lt;/span> -o &lt;span style="color:#c30">&amp;#34;awscliv2.zip&amp;#34;&lt;/span>
unzip awscliv2.zip
sudo ./aws/install
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Linux ARM&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl &lt;span style="color:#c30">&amp;#34;https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip&amp;#34;&lt;/span> -o &lt;span style="color:#c30">&amp;#34;awscliv2.zip&amp;#34;&lt;/span>
unzip awscliv2.zip
sudo ./aws/install
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>macOS&lt;/strong>
&lt;ul>
&lt;li>Install using &lt;strong>&lt;a href="https://docs.brew.sh/Installation">Homebrew&lt;/a>&lt;/strong> package manager. &lt;code>brew install awscli&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="upload-using-aws-cli">Upload using AWS CLI&lt;/h3>
&lt;ul>
&lt;li>First, you should configure &lt;code>awscli&lt;/code> and grant it access to your AWS account, for that you will need to get your &lt;strong>AWS Access Key ID&lt;/strong> and &lt;strong>Secret Access Key&lt;/strong>, you can create new Access Keys by going to &lt;a href="https://console.aws.amazon.com/iam/home?#/security_credentials">AWS IAM (Identity and Access Management) Dashboard&lt;/a>.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Alert&lt;/h4>
Make sure to store the generated keys &lt;strong>securely&lt;/strong> and don&amp;rsquo;t share them over unsecured medium, the keys can be used to gain access to your AWS account data.
&lt;/div>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">awscli configure
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="../images/hosting-s3/14.png" alt="">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ِMove to the website local directory.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Upload your files by executing &lt;strong>&lt;strong>replace [bucket-name] with the name of the bucket you created on S3&lt;/strong>&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">aws s3 sync . s3://&lt;span style="color:#555">[&lt;/span>bucket-name&lt;span style="color:#555">]&lt;/span>/
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Now you can test your new static mirror, you&amp;rsquo;ll find the website URL in &lt;strong>bucket settings &amp;gt; Properties &amp;gt; Static website hosting&lt;/strong>&lt;/p>
&lt;/div>
&lt;p>&lt;img src="../images/hosting-s3/15.png" alt="Find the configured URL for your website here">Find the configured URL for your website here&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Note that the provided URL here is &lt;a href="http://mystaticwebsitetest.s3-website.us-east-2.amazonaws.com">http://mystaticwebsitetest.s3-website.us-east-2.amazonaws.com&lt;/a> can only be accessed on plain-text HTTP protocol
&lt;/div>
&lt;p>&lt;img src="../images/hosting-s3/16.png" alt="">&lt;/p>
&lt;p>Now, there are two different URL structures which allows accessing your static website on the secure protocol HTTPS&lt;/p>
&lt;ul>
&lt;li>Bucket name as a sub-domain &lt;code>https://[mystaticwebsitetest].s3.us-east-2.amazonaws.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/17.png" alt="">&lt;/p>
&lt;ul>
&lt;li>Bucket name in the path &lt;code>https://s3.us-east-2.amazonaws.com/[mystaticwebsitetest]&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-s3/18.png" alt="">&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>While both methods may achieve same results, it&amp;rsquo;s preferred &lt;strong>in censorship circumvention context&lt;/strong> to include the bucket name in the path as in &lt;strong>method number 2&lt;/strong>.&lt;/p>
&lt;p>AWS uses a &lt;strong>&lt;a href="https://en.wikipedia.org/wiki/Wildcard_certificate">Wildcard SSL certificate&lt;/a>&lt;/strong> which supports any sub-domain under &lt;code>*.s3.us-east-2.amazonaws.com&lt;/code>, but defining the bucket name in the URL path would make it more difficult to detect traffic to this particular bucket/region/endpoint through &lt;strong>&lt;a href="https://en.wikipedia.org/wiki/Deep_packet_inspection">Deep Packet Inspection(DPI)&lt;/a>&lt;/strong>&lt;/p>
&lt;/div></description></item><item><title>Docs: Hosting on Google Cloud Storage</title><link>/docs/static-mirroring/static-hosting/gcs.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/static-mirroring/static-hosting/gcs.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Intermediate&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Any&lt;/strong>&lt;/p>
&lt;hr>
&lt;div class="alert alert-primary" role="alert">
&lt;blockquote>
&lt;p>&lt;strong>Google Cloud Storage&lt;/strong> is &lt;strong>object storage service&lt;/strong> similar to Amazon S3, and it provides the ability to serve static web pages as well.&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;p>The &lt;strong>main&lt;/strong> advantage of using Google Cloud Storage to host our static mirror is the ability to serve a fully functional &lt;strong>&amp;ldquo;static&amp;rdquo;&lt;/strong> web pages directly using Google Cloud Platform URLs which usually looks like this: &lt;code>https://storage.googleapis.com/[bucketname]&lt;/code>&lt;/p>
&lt;hr>
&lt;h2 id="configure-static-site-hosting-on-google-cloud-storage">Configure static site hosting on Google Cloud Storage&lt;/h2>
&lt;h3 id="creating-gcs-bucket-and-setting-permissions">Creating GCS bucket, and setting permissions&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>First,&lt;/strong> you need to create an account on &lt;strong>&lt;a href="https://cloud.google.com/">Google Cloud Platform&lt;/a>&lt;/strong>, you will need to create a Google account for this.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;strong>While it&amp;rsquo;s possible to use a pre-existing Google account for this step, it&amp;rsquo;s better to create a new one just for this purpose&lt;/strong>.
&lt;/div>
&lt;p>&lt;img src="../images/hosting-gcs/1.png" alt="">&lt;/p>
&lt;ul>
&lt;li>Log in to &lt;strong>&lt;a href="https://console.cloud.google.com/">Google Cloud Console&lt;/a>&lt;/strong> using your newly created account.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/2.png" alt="">&lt;/p>
&lt;ul>
&lt;li>Here, you&amp;rsquo;ll need to open &lt;strong>Storage&lt;/strong> from the side bar to access &lt;a href="https://console.cloud.google.com/storage">&lt;strong>Google Cloud Storage&lt;/strong>&lt;/a> settings page.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/3.png" alt="">Create a new bucket here&lt;/p>
&lt;p>&lt;img src="../images/hosting-gcs/4.png" alt="">Buck name&lt;/p>
&lt;ul>
&lt;li>First step will be choosing your bucket name, &lt;strong>bucket names should be unique and you&amp;rsquo;ll use it to access your static website later&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/5.png" alt="">Region settings&lt;/p>
&lt;ul>
&lt;li>Unless you know what you are doing, there is no need to change anything here.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/6.png" alt="">Storage Class&lt;/p>
&lt;ul>
&lt;li>In most cases it should be &lt;strong>Standard&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/7.png" alt="">Access control&lt;/p>
&lt;ul>
&lt;li>We will be handling permissions and access control configurations later on, so we&amp;rsquo;ll leave it unchanged for now.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/8.png" alt="">Encryption&lt;/p>
&lt;ul>
&lt;li>As this bucket will be publicly available, we don&amp;rsquo;t need to change anything with Encryption settings.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;strong>Now, we can go proceed to the new bucket settings page.&lt;/strong>
&lt;/div>
&lt;p>&lt;img src="../images/hosting-gcs/9.png" alt="">&lt;/p>
&lt;hr>
&lt;h3 id="upload-the-static-website">Upload the static website&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
&lt;strong>While you can upload your static website using the web interface, it&amp;rsquo;s preferred to do that using Google Cloud SDK, specially if you are planning on updating your mirror with new content frequently.&lt;/strong>
&lt;/div>
&lt;h4 id="install-google-cloud-sdk-command-line-interfacehttpscloudgooglecomsdkinstall">&lt;a href="https://cloud.google.com/sdk/install">Install Google Cloud SDK Command Line Interface&lt;/a>&lt;/h4>
&lt;p>&lt;strong>Installing Google Cloud SDK&lt;/strong> is pretty straight forward process. Simply, follow the instructions related to your operating system in this &lt;a href="https://cloud.google.com/sdk/install">&lt;strong>guide&lt;/strong>&lt;/a> and you will be good to go.&lt;/p>
&lt;h3 id="upload-using-google-cloud-sdk-cli">Upload using Google Cloud SDK CLI&lt;/h3>
&lt;ul>
&lt;li>After installing Google Cloud Sdk, you will need to authorize the local client to connect to you Google Cloud account, you can do that by opening your terminal and entering &lt;code>gcloud init&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/10.png" alt="">&lt;/p>
&lt;ul>
&lt;li>After &lt;strong>Successfully logging in to your account&lt;/strong>, you will be asked to select the project you want to use, if you didn&amp;rsquo;t create a new project you can do that now using the local CLI.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/11.png" alt="">&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;strong>Now, you can use your local CLI to upload the static mirror to the newly created bucket.&lt;/strong>
&lt;/div>
&lt;ul>
&lt;li>Using your terminal, change directory to the static mirror files location, and enter &lt;code>gsutil rsync -R [local-dir] gs://[bucketname]&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;strong>Replace &lt;code>[local-dir]&lt;/code> with the static mirror directory name and &lt;code>[bucketname]&lt;/code> with the bucket name.&lt;/strong>
&lt;/div>
&lt;p>&lt;img src="../images/hosting-gcs/12.png" alt="">Uploading files&lt;/p>
&lt;ul>
&lt;li>Now if you go to your bucket settings page, you will notice the static mirror files are uploaded.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/hosting-gcs/13.png" alt="">&lt;/p>
&lt;ul>
&lt;li>Final step will be &lt;strong>setting public permissions&lt;/strong> to the files so the static mirror will be accessible to public internet, you can do that using the local CLI by entering &lt;code>gsutil iam ch allUsers:objectViewer gs://[bucketname]&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;strong>Replace &lt;code>[bucketname]&lt;/code> with your bucket name.&lt;/strong>
&lt;/div>
&lt;p>Now you can access your static mirror using this URL scheme &lt;code>https://storage.googleapis.com/[bucketname]/index.html&lt;/code>&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;strong>Replace &lt;code>[bucketname]&lt;/code> with your bucket name.&lt;/strong>
&lt;/div>
&lt;p>&lt;img src="../images/hosting-gcs/14.png" alt="">&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Updating the static mirror&lt;/h4>
&lt;strong>Updating your static mirror with new content&lt;/strong> will be as simple as going to the mirror&amp;rsquo;s local directory on your terminal and executing &lt;code>gsutil rsync -R [local-dir] gs://[bucketname]&lt;/code> every time.
&lt;/div></description></item><item><title>Docs: Hosting on GitHub</title><link>/docs/static-mirroring/static-hosting/github.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/static-mirroring/static-hosting/github.html</guid><description>
&lt;p>Required expertise level : &lt;strong>Intermediate&lt;/strong>&lt;/p>
&lt;p>Platform : &lt;strong>Any&lt;/strong>&lt;/p>
&lt;hr>
&lt;div class="alert alert-primary" role="alert">
&lt;blockquote>
&lt;p>&lt;strong>GitHub&lt;/strong> is &lt;strong>a software development platform&lt;/strong> using Git version control system, and it provides the ability to serve static web pages through &lt;a href="https://pages.github.com/">&lt;strong>GitHub Pages service&lt;/strong>&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
GitHub provides an easy &lt;a href="https://pages.github.com/">&lt;strong>step-by-step guide&lt;/strong>&lt;/a> on how to host a static website on their platform.
The guide is available in English, so, in order to avoid redundancy we&amp;rsquo;ll just refer to it here and add a translated version for every available language in our documentations.
&lt;/div>
&lt;hr>
&lt;h2 id="install-git">Install Git&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>MS Windows&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://git-scm.com/download/win">Download&lt;/a>&lt;/strong> and install the official installation file&lt;/li>
&lt;li>Install using &lt;strong>&lt;a href="https://chocolatey.org/packages/git">Chocolatey&lt;/a>&lt;/strong> windows package manager &lt;code>choco install git&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Gnu/Linux&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Normally,&lt;/strong> you will fine Git package available in your distribution software repositories, in that case you can simply use your package manager to install it directly. ex: &lt;code>apt install git&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>macOS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Install using &lt;strong>&lt;a href="https://docs.brew.sh/Installation">Homebrew&lt;/a>&lt;/strong> package manager. &lt;code>brew install git&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>