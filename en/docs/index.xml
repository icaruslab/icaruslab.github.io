<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Icarus Project – Documentation</title>
    <link>/en/docs/</link>
    <description>Recent content in Documentation on Icarus Project</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/en/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Interplanetary File System</title>
      <link>/en/docs/alternative-publishing-methods/_ipfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/alternative-publishing-methods/_ipfs/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: Onion Services</title>
      <link>/en/docs/alternative-publishing-methods/_onion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/alternative-publishing-methods/_onion/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: Decoy</title>
      <link>/en/docs/dynamic-mirroring/decoy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/dynamic-mirroring/decoy/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Decoy is a reverse-proxy written in python and ready to deploy on Google App Engine platform. It can be configured to serve a specific website through App Engine.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;The main advantage Decoy provides is the ability to serve the configured website through GAE platform, using a sub-domain under appspot.com domain.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Decoy will proxy all URLs which contains the configured domain in config.py automatically, any other URL will be opened normally without proxy.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Clone the project &lt;code&gt;git clone https://github.com/icaruslab/decoy.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create an account on &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;After accessing &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Google Cloud Console&lt;/a&gt; create a new project&lt;/li&gt;
&lt;li&gt;Install &lt;a href=&#34;https://cloud.google.com/sdk/install&#34;&gt;Google Cloud SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Change the &lt;code&gt;url&lt;/code&gt; variable in config.py&lt;/li&gt;
&lt;li&gt;Use your terminal to go the project&amp;rsquo;s directory&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;gcloud init&lt;/code&gt; to configure GCloud SDK and login to your account.&lt;/li&gt;
&lt;li&gt;Select the project you created earlier using &lt;code&gt;gcloud config set project $project_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;gcloud app deploy&lt;/code&gt; and follow the instructions to deploy the app&lt;/li&gt;
&lt;li&gt;Finally you can confirm your mirror is running by visiting &lt;code&gt;[youprojectname].appspot.com&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;why-google-app-engine&#34;&gt;Why Google App Engine?&lt;/h2&gt;
&lt;p&gt;The main advantage of having the mirror traffic routed through GAE, is the ability to use a sub-domain under appspot.com to access the mirror.&lt;/p&gt;
&lt;p&gt;As the same domain is associated with many other Google cloud services it&amp;rsquo;d be difficult to block it altogether. However, it&amp;rsquo;s possible to block the sub-domain without having to block the entire domain name, in which case you&amp;rsquo;ll be able to get a new mirror up and running in less than two minutes by simply creating a new project with a different name and repeating steps 8:10&lt;/p&gt;
&lt;h2 id=&#34;attribution&#34;&gt;Attribution&lt;/h2&gt;
&lt;p&gt;This project was inspired and built on &lt;a href=&#34;https://github.com/bslatkin/mirrorrr&#34;&gt;mirrorrr&lt;/a&gt; project.&lt;/p&gt;
&lt;h2 id=&#34;disclaimer&#34;&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;This project and all Icarus Project’s related products are solely focused and intended to be used as Internet censorship circumvention solutions, more specifically in human rights and independent media context.
Icarus Project is not responsible for any abuse and/or malicious use of any of its published research results.&lt;/p&gt;
&lt;h2 id=&#34;todo&#34;&gt;Todo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Rewrite in Python3&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Encrypted SNI</title>
      <link>/en/docs/alternative-publishing-methods/_esni/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/alternative-publishing-methods/_esni/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: Wget</title>
      <link>/en/docs/static-mirroring/wget-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/static-mirroring/wget-guide/</guid>
      <description>
        
        
        &lt;p&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;strong&gt;Wget&lt;/strong&gt; is a cli-based software that retrieves web content, it supports HTTP, HTTPS, and FTP protocols.
&lt;/div&gt;

&lt;strong&gt;One of Wget’s features&lt;/strong&gt; is the ability to scan and index the entirety of a website and download a fully functional static clone of the original website.&lt;/p&gt;
&lt;p&gt;The static clone can be later refreshed and updated with new content published to the original website.
While there are different ways of performing this task using Wget, you may get different results depending on your original website properties, including the CMS being used, the web server configurations, any kind of DDoS protection and online asset&amp;rsquo;s protection e.g. images and videos.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;install-wget&#34;&gt;Install Wget&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;MS Windows&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/install&#34;&gt;Chocolatey&lt;/a&gt; package manager for MS Windows&lt;/p&gt;
&lt;p&gt;&lt;code&gt;choco install wget&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Gnu/Linux&lt;/strong&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
As Wget is a Gnu developed software, it’s available in most distributions main repositories, the installation process should be as simple as using your distribution’s package manager.
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Examples&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt install wget&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dnf install wget&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pacman -S wget&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install using &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; package manager&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew install wget&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install using &lt;a href=&#34;https://www.macports.org/install.php&#34;&gt;Macports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;port install wget&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;pulling-the-website-to-your-local-machine&#34;&gt;Pulling the website to your local machine&lt;/h3&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
We will be using some basic parameters for Wget which should work for the majority of websites, but you may need to refer to the &lt;a href=&#34;https://www.gnu.org/software/wget/manual/wget.html&#34;&gt;manual pages of Wget&lt;/a&gt; in case of needing to do some tweaks or solve an issue with the resulting mirror.
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;wget --mirror --convert-links --adjust-extension --page-requisites http://example.org&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;parameters-and-options-description&#34;&gt;Parameters and options description&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;--mirror&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Turn on options suitable for mirroring.  This option turns on recursion and time-stamping, sets infinite recursion depth and keeps FTP directory listings.&lt;/p&gt;
&lt;p&gt;-&lt;code&gt;-convert-links&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After the download is complete, convert the links in the document to make them suitable for local viewing.  This affects not only the visible hyperlinks, but any part of the document that links to external content, such as embedded images, links to style sheets, hyperlinks to non-HTML content, etc.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--adjust-extension&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If some link points to &lt;code&gt;//foo.com/bar.cgi?xyz&lt;/code&gt; with &lt;code&gt;--adjust-extension&lt;/code&gt; asserted and its local destination is intended to be .&lt;code&gt;/foo.com/bar.cgi?xyz.css&lt;/code&gt;, then the link would be converted to &lt;code&gt;//foo.com/bar.cgi?xyz.css&lt;/code&gt;. Note that only the filename part has been modified. The rest of the URL has been left untouched, including the net path &lt;code&gt;(&amp;quot;//&amp;quot;)&lt;/code&gt; which would otherwise be processed by Wget and converted to the effective scheme &lt;code&gt;(ie. &amp;quot;http://&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--page-requisites&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This option causes Wget to download all the files that are necessary to properly display a given HTML page.  This includes such things as inlined images, sounds, and referenced stylesheets.&lt;/p&gt;
&lt;hr&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
&lt;a href=&#34;https://gitlab.com/gnuwget/wget2&#34;&gt;Wget2&lt;/a&gt; is currently being developed, while it’s not stable yet but it’s a full rewrite of the original Wget and meant to replace it in the near future. Wget2 comes with many new features such as HTTP/2.0 support and multi-threaded download which can make the process of pulling large websites way faster.
&lt;/div&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
For websites operating behind Cloudflare, this process can be identified as malicious behaviour as many simultaneous requests are coming from one IP address in short intervals, this can result in partial downloads or failing to download some assets such as inline images and CSS files.
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;This can be solved&lt;/strong&gt; by either &lt;strong&gt;whitelisting your IP address on Cloudflare&lt;/strong&gt; and disable assets protection features during the crawling process, or configure the origin server to &lt;strong&gt;allow direct access&lt;/strong&gt; on a different domain/sub-domain with &lt;a href=&#34;https://en.wikipedia.org/wiki/Basic_access_authentication&#34;&gt;basic authentication&lt;/a&gt; enabled, you can then add &lt;code&gt;--http-user=[HTTP-USER]&lt;/code&gt; &lt;code&gt;--http-passwd=[HTTP-PASSWORD]&lt;/code&gt; parameters to your Wget command to authenticate.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: HTTrack</title>
      <link>/en/docs/static-mirroring/httrack-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/static-mirroring/httrack-guide/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;&lt;strong&gt;HTTrack&lt;/strong&gt; is a free software developed for the specific purpose of downloading fully functional offline copies of any website.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It has many advantages over Wget, and offers a graphical user interface. While it’s not being updated since 2017, it proofed to be efficient in most use cases in our testing scenarios.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;

&lt;h3 id=&#34;install-httrack&#34;&gt;Install HTTrack&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/install&#34;&gt;Chocolatey&lt;/a&gt; package manager for MS Windows&lt;/p&gt;
&lt;p&gt;&lt;code&gt;choco install httrack&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or you can download the installation file &lt;a href=&#34;https://www.httrack.com/page/2/en/index.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Gnu/Linux&lt;/strong&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Since HTTrack is available in most major distributions main repositories, you can use your package manager to directly install the compiled version.
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apt install httrack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dnf install httrack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pacman -S httrack&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

In this &lt;a href=&#34;https://www.httrack.com/page/2/en/index.html&#34;&gt;page&lt;/a&gt; you can find instructions on downloading and building HTTrack from source.
&lt;/div&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
Also, a version with a graphical user interface exists for Gnu/Linux but still in beta, you can find the source &lt;a href=&#34;https://sourceforge.net/projects/httraqt/&#34;&gt;here&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Using Homebrew package manager&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew install httrack&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using Macports&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo port install httrack&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;pulling-the-website-to-your-local-machine&#34;&gt;Pulling the website to your local machine&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;httrack --mirror --robots&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; --stay-on-same-domain --user-agent &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0&amp;#34;&lt;/span&gt;  --keep-links&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt; --path example.org --quiet https://example.org/ -* +example.org/*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;parameters-and-options-description&#34;&gt;Parameters and options description&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;--mirror&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Mirror websites&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--robots=0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Follow robots.txt and meta  robots  tags  (0=never,1=sometimes,*  2=always,  3=always  (even strict rules)) (&amp;ndash;robots[=N])&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--stay-on-same-domain&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Stay on the same principal domain&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--user-agent &amp;quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;User-agent field sent in HTTP headers&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--keep-links=0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;keep  original  links  (e.g.  &lt;a href=&#34;http://www.adr/link&#34;&gt;http://www.adr/link&lt;/a&gt;)  (&lt;code&gt;--keep-links=0&lt;/code&gt; *relative link, &lt;code&gt;--keep-links&lt;/code&gt; absolute links, &lt;code&gt;--keep-links=4&lt;/code&gt; original links, &lt;code&gt;--keep-links=3&lt;/code&gt; absolute URI links, &lt;code&gt;--keep-links=5&lt;/code&gt; transparent proxy link)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--path example.org&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path for mirror/logfiles+cache (&lt;code&gt;--path&lt;/code&gt; mirror[,path cache and logfiles])&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--quiet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;no questions - quiet mode&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://example.org/ -*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replace example.org with the website you want to mirror&lt;/p&gt;
&lt;p&gt;&lt;code&gt;+example.org/*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;HTTrack will crawl and scan the whole website, renders every and save it locally to your machine in an offline browsable form. The suggested combination of arguments will convert the inline URLs to relative links which can be hosted virtually anywhere.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;httrack --continue&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In case of intercepted or uncompleted download process HTTrack will use the cache to resume the download process and make sure it won’t include re-downloading the same unchanged assets.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;httrack --update&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Here we need to consider a very important note about how HTTrack functions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Normally&lt;/strong&gt; there will be a cached version of all downloaded assets saved in a directory under the main project’s directory named hts-cache, the cache will be used in every update presumably to avoid having to crawl and download the whole website with every update, which can be a very time-consuming process especially with big websites.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, in our testing with different websites of different sizes and structures, the real-life scenario turned to be different from what the software documentations provides.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;em&gt;For example&lt;/em&gt; with a big WordPress website running relatively recent version of Nginx web server and operating behind a Cloudflare proxy, the cache never helped to reduce the update times needed to refresh the static copy with new published content and HTTrack was almost crawling all over the website with every update.
&lt;/div&gt;

&lt;p&gt;This can be connected with many elements, among them will that HTTrack is a relatively old software which didn’t receive any updates since 2017 therefore it’s support for the most recent changes in the web structure and technologies isn’t the best.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;One other element&lt;/strong&gt; &lt;em&gt;which will cause great impact and change of behavior in any tools doing the same functionality,&lt;/em&gt; will be dealing with different configuration and installations of Web servers, CMS, and security measurements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We encourage&lt;/strong&gt; you to dig deeper in HTTrack documentation to find options and arguments which can help to find the best suited configuration for your setup.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
When using HTTrack &lt;em&gt;- and almost any website downloader -,&lt;/em&gt; while you are using Cloudflare proxy and DDoS protection for your website, it’s highly important to set a &lt;code&gt;user-agent&lt;/code&gt; in the arguments and make sure the chosen &lt;code&gt;user-agent&lt;/code&gt; isn’t blocked in the security settings in your web server and Cloudflare.
&lt;/div&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;With big websites&lt;/strong&gt;, many security settings and tools might identify the constant crawling and multiple hits in short time intervals as malicious behavior and block or throttle your IP address&amp;rsquo;s connection to the website.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In that case&lt;/strong&gt; you should revise your security settings and find the maximum allowed connections then you can use arguments like &lt;code&gt;--max-rate=N&lt;/code&gt;, &lt;code&gt;--connection-per-second=N&lt;/code&gt;, &lt;code&gt;--max-pause=N&lt;/code&gt; to limit HTTrack traffic hitting your website to the maximum allowed numbers.&lt;/p&gt;
&lt;p&gt;Also, you should consider whitelisting your IP address in your security settings if the option exists.&lt;/p&gt;

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: WordPress Plugins</title>
      <link>/en/docs/static-mirroring/wpplugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/static-mirroring/wpplugins/</guid>
      <description>
        
        
        &lt;h2 id=&#34;wp2statichttpsgithubcomwp2static&#34;&gt;&lt;a href=&#34;https://github.com/WP2Static&#34;&gt;WP2Static&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/images/wp2static/1.png&#34; alt=&#34;&#34;&gt;WP2Static options&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WP2Static can be considered as the most optimal plugin for the purpose of generating and updating a static mirror.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This plugin also offers different deployment sub-plugins which can configure direct deployments to platforms like Amazon S3 and GitHub.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, it&amp;rsquo;s plugin development process itself doesn’t seem to be stable, at the time of writing these documentations, it appears to be transitioning to a new approach and undergoing big changes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wordpress.org/plugins/static-html-output-plugin/&#34;&gt;An old version of the plugin&lt;/a&gt; was recently flagged as closed in WordPress’s plugins platform, and the developed published his &lt;a href=&#34;https://staticword.press/t/removal-of-wp2static-from-wordpress-org/159&#34;&gt;reasoning&lt;/a&gt; behind this approach.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Two different versions&lt;/strong&gt; of the plugin however will continue to be available through the developer&amp;rsquo;s &lt;a href=&#34;https://wp2static.com/&#34;&gt;website&lt;/a&gt; and &lt;a href=&#34;https://github.com/WP2Static&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;old version&lt;/strong&gt; renamed as &lt;a href=&#34;https://github.com/WP2Static/static-html-output-plugin&#34;&gt;static-html-output-plugin&lt;/a&gt;, will be available pre-built and ready to install on the website download section.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;new version&lt;/strong&gt; named as &lt;a href=&#34;https://github.com/WP2Static/wp2static&#34;&gt;WP2Static&lt;/a&gt;, while still being considered as &lt;strong&gt;experimental&lt;/strong&gt;, it performed well in our testing &lt;strong&gt;&lt;em&gt;but it needs to be built from the source before installing on WordPress.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;downloading-and-building-the-new-plugin&#34;&gt;Downloading and building the new plugin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Clone the repository.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/WP2Static/wp2static.git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt; and PHP on your local machine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change to the plugins source code directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the plugin using&lt;/p&gt;
&lt;p&gt;&lt;code&gt;composer install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compress the plugin directory into a .zip archive&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zip -r wp2static.zip wp2static&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Same steps are required&lt;/strong&gt; for each sub-plugin which you will need for automating deployments to differant hosting platforms such as Amazon S3 or GitHub.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sub-plugins should be installed manually as separate plugins on WordPress.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sub-plugins will show under Add-Ons section in WP2Static settings and needs to be enabled and configured.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;hr&gt;
&lt;h3 id=&#34;wp2static-settings-and-configuration&#34;&gt;WP2Static settings and configuration&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/wp2static/2.png&#34; alt=&#34;&#34;&gt;Select which content types should be included in the mirror, and the deployment URL&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/wp2static/3.png&#34; alt=&#34;&#34;&gt;After installing any deployment Add-On it should be displayed here&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/wp2static/4.png&#34; alt=&#34;&#34;&gt;Example for Amazon S3 deployment Add-On options&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/wp2static/5.png&#34; alt=&#34;&#34;&gt;Here you will find useful diagnostic information about your installation and it&amp;rsquo;s compatibility with the plugin requirements&lt;/p&gt;
&lt;h2 id=&#34;simply-statichttpswordpressorgpluginssimply-static&#34;&gt;&lt;a href=&#34;https://wordpress.org/plugins/simply-static/&#34;&gt;Simply static&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/images/simplystatic/1.png&#34; alt=&#34;&#34;&gt;Simply Static options&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Simply Static&lt;/strong&gt; is a WordPress Plugin with similar functionality to WP2Static. However, it comes with fewer features and might not fit the needs of a big and/or very frequently updated website, as for example, it doesn’t support incremental builds for the static mirror, which means it needs to go through the whole process every time a build is triggered.&lt;/p&gt;
&lt;p&gt;Furthermore, Simply Static doesn’t support automatic builds triggering with every new post, so a new build can only be triggered manually, which makes this plugin more fit for small blogs or rarely updated websites.&lt;/p&gt;
&lt;h3 id=&#34;simply-static-settings-and-configuration&#34;&gt;Simply Static settings and configuration&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/simplystatic/2.png&#34; alt=&#34;&#34;&gt;Simply Static options&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can set the &lt;code&gt;Delivery Method&lt;/code&gt; to &lt;code&gt;Local Directory&lt;/code&gt; to have the generated static files stored on the same server/machine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the web-server user have write privileges on the selected directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are planning on hosting your static website on an object storage platform such as S3, you should make sure to &lt;code&gt;Use relative URLs&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;/images/simplystatic/3.png&#34; alt=&#34;&#34;&gt;Here you will find useful diagnostic information about your installation and it&amp;rsquo;s compatibility with the plugin requirements&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Hosting on Amazon S3</title>
      <link>/en/docs/static-mirroring/static-hosting/amazons3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/static-mirroring/static-hosting/amazons3/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Amazon S3&lt;/strong&gt; (Amazon Simple Storage Service) is a data storage service and one of the Amazon Web Services (AWS)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;

&lt;p&gt;S3 provides &lt;strong&gt;object storage&lt;/strong&gt; service, which means that data is stored and addressed as objects, each object contains it&amp;rsquo;s own data in addition to meta-data and a unique identifier.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Object storage&lt;/strong&gt; is often used to store big amounts of data that doesn&amp;rsquo;t need the features and structure of the file systems hierarchy.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;main&lt;/strong&gt; advantage of using S3 to host our static mirror is the ability to serve a fully functional &lt;strong&gt;&amp;ldquo;static&amp;rdquo;&lt;/strong&gt; web pages directly from Amazon S3 URLs which consists of &lt;code&gt;[bucketname]+[endpoint]&lt;/code&gt; or &lt;code&gt;[endpoint]/[bucketname]&lt;/code&gt; ex: &lt;code&gt;mybucket.s3.us-east-2.amazonaws.com&lt;/code&gt; or &lt;code&gt;https://s3.us-east-2.amazonaws.com/mybucket&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;configure-static-site-hosting-on-s3&#34;&gt;Configure static site hosting on S3&lt;/h2&gt;
&lt;h3 id=&#34;creating-s3-bucket-and-setting-configurations-for-static-site-hosting&#34;&gt;Creating S3 bucket, and setting configurations for Static Site hosting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;First,&lt;/strong&gt; you need to create an account on &lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt;Amazon Web Services (AWS)&lt;/a&gt;&lt;/strong&gt;, and then, &lt;strong&gt;sign in&lt;/strong&gt; to &lt;strong&gt;&lt;a href=&#34;https://signin.aws.amazon.com&#34;&gt;AWS Console&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/1.png&#34; alt=&#34;&#34;&gt;AWS login page&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;strong&gt;&lt;a href=&#34;https://s3.console.aws.amazon.com&#34;&gt;S3 management console&lt;/a&gt;&lt;/strong&gt;, create a new bucket.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/2.png&#34; alt=&#34;&#34;&gt;S3 management console&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
You should pick a unique name for your bucket.
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/3.png&#34; alt=&#34;&#34;&gt;S3 new bucket&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;strong&gt;Set permissions&lt;/strong&gt; tab, uncheck &lt;strong&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Block &lt;em&gt;all&lt;/em&gt; public access&lt;/strong&gt;, and confirm that you want to enable public access to the bucket.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/4.png&#34; alt=&#34;&#34;&gt;Bucket permission tab&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Finally,&lt;/strong&gt; review your options and &lt;strong&gt;create&lt;/strong&gt; the new bucket.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/5.png&#34; alt=&#34;&#34;&gt;Create bucket&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your newly created bucket should appear in this form.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Head to the new bucket&amp;rsquo;s settings by clicking on the bucket name.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/7.png&#34; alt=&#34;&#34;&gt;S3 bucket settings&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;strong&gt;Properties&lt;/strong&gt; tab click on &lt;strong&gt;Static website hosting&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/8.png&#34; alt=&#34;&#34;&gt;S3 bucket Properties&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After setting &lt;strong&gt;Use this bucket to host a website&lt;/strong&gt;, you need to set the &lt;strong&gt;path&lt;/strong&gt; for your &lt;code&gt;index.html&lt;/code&gt;(main page), &lt;strong&gt;optionally&lt;/strong&gt; you can set a custom &lt;code&gt;error.html&lt;/code&gt; page, and click &lt;strong&gt;save&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/9.png&#34; alt=&#34;&#34;&gt;S3 Static website hosting&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/10.png&#34; alt=&#34;&#34;&gt;S3 enabled Static website hosting&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Now, we need to set the &lt;strong&gt;bucket permissions policy&lt;/strong&gt; to allow public read for all objects.
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Head to &lt;strong&gt;Permissions&lt;/strong&gt; tab, and click on &lt;strong&gt;Bucket Policy&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/11.png&#34; alt=&#34;&#34;&gt;S3 bucket policy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The simplest form of static website hosting policy on S3 should look like this.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;2012-10-17&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;Statement&amp;#34;&lt;/span&gt;: [
        {
            &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;Sid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;PublicReadGetObject&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;Effect&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;Principal&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;: [
                &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;s3:GetObject&amp;#34;&lt;/span&gt;
            ],
            &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;Resource&amp;#34;&lt;/span&gt;: [
                &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;arn:aws:s3:::example.com/*&amp;#34;&lt;/span&gt;
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
In this example bucket policy &lt;code&gt;example.com&lt;/code&gt; is the bucket name. To use this policy example you need to replace &lt;code&gt;example.com&lt;/code&gt; with your newly created bucket name in the &lt;code&gt;&amp;quot;Resources&amp;quot;&lt;/code&gt; key value.
&lt;/div&gt;



&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Now, we are ready to upload our &lt;strong&gt;static mirror&lt;/strong&gt; to our S3 bucket.&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&#34;upload-using-the-web-user-interface&#34;&gt;Upload using the Web user interface&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You will find the upload option in the bucket settings page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/12.png&#34; alt=&#34;&#34;&gt;S3 files upload&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure &lt;strong&gt;grant public read access&lt;/strong&gt; to the uploaded files in the permissions tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/13.png&#34; alt=&#34;&#34;&gt;S3 files upload permissions&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;strong&gt;While&lt;/strong&gt; you can easily upload your website files directly in the browser by clicking on &lt;strong&gt;Upload&lt;/strong&gt; in the bucket settings page, it&amp;rsquo;s preferred to use &lt;strong&gt;AWS CLI&lt;/strong&gt;, specially if when you are uploading large websites.
&lt;/div&gt;

&lt;hr&gt;
&lt;h4 id=&#34;install-aws-command-line-interfacehttpsdocsawsamazoncomclilatestuserguideinstall-cliv2html&#34;&gt;&lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html&#34;&gt;Install AWS Command Line Interface&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MS Windows&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://awscli.amazonaws.com/AWSCLIV2.msi&#34;&gt;Download&lt;/a&gt;&lt;/strong&gt; and install the official installation file&lt;/li&gt;
&lt;li&gt;Install using &lt;strong&gt;&lt;a href=&#34;https://chocolatey.org/packages/awscli&#34;&gt;Chocolatey&lt;/a&gt;&lt;/strong&gt; windows package manager &lt;code&gt;choco install awscli&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Gnu/Linux&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Normally,&lt;/strong&gt; you will fine AWS CLI package available in your distribution software repositories, in that case you can simply use your package manager to install it directly. ex: &lt;code&gt;apt install awscli&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If that&amp;rsquo;s not the case, you can install it &lt;strong&gt;manually&lt;/strong&gt; by executing these commands in your terminal in their respective order.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Linux x86 (64-bit)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&amp;#34;&lt;/span&gt; -o &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;awscliv2.zip&amp;#34;&lt;/span&gt;
unzip awscliv2.zip
sudo ./aws/install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Linux ARM&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip&amp;#34;&lt;/span&gt; -o &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;awscliv2.zip&amp;#34;&lt;/span&gt;
unzip awscliv2.zip
sudo ./aws/install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Install using &lt;strong&gt;&lt;a href=&#34;https://docs.brew.sh/Installation&#34;&gt;Homebrew&lt;/a&gt;&lt;/strong&gt; package manager. &lt;code&gt;brew install awscli&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;upload-using-aws-cli&#34;&gt;Upload using AWS CLI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;First, you should configure &lt;code&gt;awscli&lt;/code&gt; and grant it access to your AWS account, for that you will need to get your &lt;strong&gt;AWS Access Key ID&lt;/strong&gt; and &lt;strong&gt;Secret Access Key&lt;/strong&gt;, you can create new Access Keys by going to &lt;a href=&#34;https://console.aws.amazon.com/iam/home?#/security_credentials&#34;&gt;AWS IAM (Identity and Access Management) Dashboard&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Alert&lt;/h4&gt;
Make sure to store the generated keys &lt;strong&gt;securely&lt;/strong&gt; and don&amp;rsquo;t share them over unsecured medium, the keys can be used to gain access to your AWS account data.
&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;awscli configure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/14.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ِMove to the website local directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upload your files by executing &lt;strong&gt;&lt;strong&gt;replace [bucket-name] with the name of the bucket you created on S3&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;aws s3 sync . s3://&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;bucket-name&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Now you can test your new static mirror, you&amp;rsquo;ll find the website URL in &lt;strong&gt;bucket settings &amp;gt; Properties &amp;gt; Static website hosting&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/15.png&#34; alt=&#34;Find the configured URL for your website here&#34;&gt;Find the configured URL for your website here&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
Note that the provided URL here is &lt;a href=&#34;http://mystaticwebsitetest.s3-website.us-east-2.amazonaws.com&#34;&gt;http://mystaticwebsitetest.s3-website.us-east-2.amazonaws.com&lt;/a&gt; can only be accessed on plain-text HTTP protocol
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/16.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, there are two different URL structures which allows accessing your static website on the secure protocol HTTPS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bucket name as a sub-domain  &lt;code&gt;https://[mystaticwebsitetest].s3.us-east-2.amazonaws.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/17.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bucket name in the path &lt;code&gt;https://s3.us-east-2.amazonaws.com/[mystaticwebsitetest]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-s3/18.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;p&gt;While both methods may achieve same results, it&amp;rsquo;s preferred &lt;strong&gt;in censorship circumvention context&lt;/strong&gt; to include the bucket name in the path as in &lt;strong&gt;method number 2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;AWS uses a &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Wildcard_certificate&#34;&gt;Wildcard SSL certificate&lt;/a&gt;&lt;/strong&gt; which supports any sub-domain under &lt;code&gt;*.s3.us-east-2.amazonaws.com&lt;/code&gt;, but defining the bucket name in the URL path would make it more difficult to detect traffic to this particular bucket/region/endpoint through &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Deep_packet_inspection&#34;&gt;Deep Packet Inspection(DPI)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: Hosting on Google Cloud Storage</title>
      <link>/en/docs/static-mirroring/static-hosting/gcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/static-mirroring/static-hosting/gcs/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Google Cloud Storage&lt;/strong&gt; is &lt;strong&gt;object storage service&lt;/strong&gt; similar to Amazon S3, and it provides the ability to serve static web pages as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;main&lt;/strong&gt; advantage of using Google Cloud Storage to host our static mirror is the ability to serve a fully functional &lt;strong&gt;&amp;ldquo;static&amp;rdquo;&lt;/strong&gt; web pages directly using Google Cloud Platform URLs which usually looks like this: &lt;code&gt;https://storage.googleapis.com/[bucketname]&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;configure-static-site-hosting-on-google-cloud-storage&#34;&gt;Configure static site hosting on Google Cloud Storage&lt;/h2&gt;
&lt;h3 id=&#34;creating-gcs-bucket-and-setting-permissions&#34;&gt;Creating GCS bucket, and setting permissions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;First,&lt;/strong&gt; you need to create an account on &lt;strong&gt;&lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;&lt;/strong&gt;, you will need to create a Google account for this.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;strong&gt;While it&amp;rsquo;s possible to use a pre-existing Google account for this step, it&amp;rsquo;s better to create a new one just for this purpose&lt;/strong&gt;.
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Log in to &lt;strong&gt;&lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Google Cloud Console&lt;/a&gt;&lt;/strong&gt; using your newly created account.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Here, you&amp;rsquo;ll need to open &lt;strong&gt;Storage&lt;/strong&gt; from the side bar to access &lt;a href=&#34;https://console.cloud.google.com/storage&#34;&gt;&lt;strong&gt;Google Cloud Storage&lt;/strong&gt;&lt;/a&gt; settings page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/3.png&#34; alt=&#34;&#34;&gt;Create a new bucket here&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/4.png&#34; alt=&#34;&#34;&gt;Buck name&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First step will be choosing your bucket name, &lt;strong&gt;bucket names should be unique and you&amp;rsquo;ll use it to access your static website later&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/5.png&#34; alt=&#34;&#34;&gt;Region settings&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unless you know what you are doing, there is no need to change anything here.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/6.png&#34; alt=&#34;&#34;&gt;Storage Class&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In most cases it should be &lt;strong&gt;Standard&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/7.png&#34; alt=&#34;&#34;&gt;Access control&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We will be handling permissions and access control configurations later on, so we&amp;rsquo;ll leave it unchanged for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/8.png&#34; alt=&#34;&#34;&gt;Encryption&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As this bucket will be publicly available, we don&amp;rsquo;t need to change anything with Encryption settings.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;strong&gt;Now, we can go proceed to the new bucket settings page.&lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;upload-the-static-website&#34;&gt;Upload the static website&lt;/h3&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;strong&gt;While you can upload your static website using the web interface, it&amp;rsquo;s preferred to do that using Google Cloud SDK, specially if you are planning on updating your mirror with new content frequently.&lt;/strong&gt;
&lt;/div&gt;

&lt;h4 id=&#34;install-google-cloud-sdk-command-line-interfacehttpscloudgooglecomsdkinstall&#34;&gt;&lt;a href=&#34;https://cloud.google.com/sdk/install&#34;&gt;Install Google Cloud SDK Command Line Interface&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Installing Google Cloud SDK&lt;/strong&gt; is pretty straight forward process. Simply, follow the instructions related to your operating system in this &lt;a href=&#34;https://cloud.google.com/sdk/install&#34;&gt;&lt;strong&gt;guide&lt;/strong&gt;&lt;/a&gt; and you will be good to go.&lt;/p&gt;
&lt;h3 id=&#34;upload-using-google-cloud-sdk-cli&#34;&gt;Upload using Google Cloud SDK CLI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;After installing Google Cloud Sdk, you will need to authorize the local client to connect to you Google Cloud account, you can do that by opening your terminal and entering &lt;code&gt;gcloud init&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After &lt;strong&gt;Successfully logging in to your account&lt;/strong&gt;, you will be asked to select the project you want to use, if you didn&amp;rsquo;t create a new project you can do that now using the local CLI.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;strong&gt;Now, you can use your local CLI to upload the static mirror to the newly created bucket.&lt;/strong&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Using your terminal, change directory to the static mirror files location, and enter &lt;code&gt;gsutil rsync -R [local-dir] gs://[bucketname]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;strong&gt;Replace &lt;code&gt;[local-dir]&lt;/code&gt; with the static mirror directory name and &lt;code&gt;[bucketname]&lt;/code&gt; with the bucket name.&lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/12.png&#34; alt=&#34;&#34;&gt;Uploading files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now if you go to your bucket settings page, you will notice the static mirror files are uploaded.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/13.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Final step will be &lt;strong&gt;setting public permissions&lt;/strong&gt; to the files so the static mirror will be accessible to public internet, you can do that using the local CLI by entering &lt;code&gt;gsutil iam ch allUsers:objectViewer gs://[bucketname]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;strong&gt;Replace &lt;code&gt;[bucketname]&lt;/code&gt; with your bucket name.&lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;Now you can access your static mirror using this URL scheme &lt;code&gt;https://storage.googleapis.com/[bucketname]/index.html&lt;/code&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
&lt;strong&gt;Replace &lt;code&gt;[bucketname]&lt;/code&gt; with your bucket name.&lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;/images/hosting-gcs/14.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Updating the static mirror&lt;/h4&gt;
&lt;strong&gt;Updating your static mirror with new content&lt;/strong&gt; will be as simple as going to the mirror&amp;rsquo;s local directory on your terminal and executing &lt;code&gt;gsutil rsync -R [local-dir] gs://[bucketname]&lt;/code&gt; every time.
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: Hosting on GitHub</title>
      <link>/en/docs/static-mirroring/static-hosting/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/docs/static-mirroring/static-hosting/github/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt; is &lt;strong&gt;a software development platform&lt;/strong&gt; using Git version control system, and it provides the ability to serve static web pages through &lt;a href=&#34;https://pages.github.com/&#34;&gt;&lt;strong&gt;GitHub Pages service&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
GitHub provides an easy &lt;a href=&#34;https://pages.github.com/&#34;&gt;&lt;strong&gt;step-by-step guide&lt;/strong&gt;&lt;/a&gt; on how to host a static website on their platform.
The guide is available in English, so, in order to avoid redundancy we&amp;rsquo;ll just refer to it here and add a translated version for every available language in our documentations.
&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;install-git&#34;&gt;Install Git&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MS Windows&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Download&lt;/a&gt;&lt;/strong&gt; and install the official installation file&lt;/li&gt;
&lt;li&gt;Install using &lt;strong&gt;&lt;a href=&#34;https://chocolatey.org/packages/git&#34;&gt;Chocolatey&lt;/a&gt;&lt;/strong&gt; windows package manager &lt;code&gt;choco install git&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Gnu/Linux&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Normally,&lt;/strong&gt; you will fine Git package available in your distribution software repositories, in that case you can simply use your package manager to install it directly. ex: &lt;code&gt;apt install git&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install using &lt;strong&gt;&lt;a href=&#34;https://docs.brew.sh/Installation&#34;&gt;Homebrew&lt;/a&gt;&lt;/strong&gt; package manager. &lt;code&gt;brew install git&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
